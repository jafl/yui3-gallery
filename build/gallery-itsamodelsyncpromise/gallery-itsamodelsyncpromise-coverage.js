if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js']) {
   __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'] = {"path":"build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":59}}},"2":{"name":"(anonymous_2)","line":79,"loc":{"start":{"line":79,"column":13},"end":{"line":79,"column":33}}},"3":{"name":"ITSAModelSyncPromise","line":97,"loc":{"start":{"line":97,"column":4},"end":{"line":97,"column":36}}},"4":{"name":"(anonymous_4)","line":131,"loc":{"start":{"line":131,"column":23},"end":{"line":131,"column":41}}},"5":{"name":"(anonymous_5)","line":135,"loc":{"start":{"line":135,"column":33},"end":{"line":135,"column":60}}},"6":{"name":"(anonymous_6)","line":140,"loc":{"start":{"line":140,"column":26},"end":{"line":140,"column":40}}},"7":{"name":"(anonymous_7)","line":146,"loc":{"start":{"line":146,"column":30},"end":{"line":146,"column":49}}},"8":{"name":"(anonymous_8)","line":166,"loc":{"start":{"line":166,"column":53},"end":{"line":166,"column":78}}},"9":{"name":"(anonymous_9)","line":196,"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":40}}},"10":{"name":"(anonymous_10)","line":200,"loc":{"start":{"line":200,"column":33},"end":{"line":200,"column":60}}},"11":{"name":"(anonymous_11)","line":205,"loc":{"start":{"line":205,"column":26},"end":{"line":205,"column":40}}},"12":{"name":"(anonymous_12)","line":211,"loc":{"start":{"line":211,"column":30},"end":{"line":211,"column":49}}},"13":{"name":"(anonymous_13)","line":234,"loc":{"start":{"line":234,"column":51},"end":{"line":234,"column":76}}},"14":{"name":"(anonymous_14)","line":265,"loc":{"start":{"line":265,"column":21},"end":{"line":265,"column":40}}},"15":{"name":"(anonymous_15)","line":269,"loc":{"start":{"line":269,"column":33},"end":{"line":269,"column":60}}},"16":{"name":"(anonymous_16)","line":274,"loc":{"start":{"line":274,"column":54},"end":{"line":274,"column":77}}},"17":{"name":"(anonymous_17)","line":282,"loc":{"start":{"line":282,"column":34},"end":{"line":282,"column":48}}},"18":{"name":"(anonymous_18)","line":288,"loc":{"start":{"line":288,"column":38},"end":{"line":288,"column":57}}},"19":{"name":"(anonymous_19)","line":312,"loc":{"start":{"line":312,"column":63},"end":{"line":312,"column":88}}},"20":{"name":"(anonymous_20)","line":343,"loc":{"start":{"line":343,"column":24},"end":{"line":343,"column":43}}},"21":{"name":"(anonymous_21)","line":347,"loc":{"start":{"line":347,"column":33},"end":{"line":347,"column":60}}},"22":{"name":"(anonymous_22)","line":348,"loc":{"start":{"line":348,"column":46},"end":{"line":348,"column":58}}},"23":{"name":"(anonymous_23)","line":350,"loc":{"start":{"line":350,"column":29},"end":{"line":350,"column":40}}},"24":{"name":"(anonymous_24)","line":351,"loc":{"start":{"line":351,"column":61},"end":{"line":351,"column":77}}},"25":{"name":"(anonymous_25)","line":356,"loc":{"start":{"line":356,"column":34},"end":{"line":356,"column":48}}},"26":{"name":"(anonymous_26)","line":365,"loc":{"start":{"line":365,"column":38},"end":{"line":365,"column":57}}},"27":{"name":"(anonymous_27)","line":377,"loc":{"start":{"line":377,"column":61},"end":{"line":377,"column":86}}},"28":{"name":"(anonymous_28)","line":392,"loc":{"start":{"line":392,"column":16},"end":{"line":392,"column":27}}},"29":{"name":"(anonymous_29)","line":407,"loc":{"start":{"line":407,"column":30},"end":{"line":407,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":425,"column":133}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":13}},"3":{"start":{"line":30,"column":3},"end":{"line":93,"column":6}},"4":{"start":{"line":80,"column":8},"end":{"line":91,"column":9}},"5":{"start":{"line":81,"column":12},"end":{"line":90,"column":13}},"6":{"start":{"line":82,"column":16},"end":{"line":82,"column":46}},"7":{"start":{"line":84,"column":16},"end":{"line":88,"column":19}},"8":{"start":{"line":89,"column":16},"end":{"line":89,"column":28}},"9":{"start":{"line":92,"column":8},"end":{"line":92,"column":24}},"10":{"start":{"line":97,"column":4},"end":{"line":97,"column":38}},"11":{"start":{"line":98,"column":4},"end":{"line":419,"column":13}},"12":{"start":{"line":132,"column":12},"end":{"line":132,"column":32}},"13":{"start":{"line":134,"column":12},"end":{"line":134,"column":36}},"14":{"start":{"line":135,"column":12},"end":{"line":175,"column":15}},"15":{"start":{"line":136,"column":16},"end":{"line":139,"column":24}},"16":{"start":{"line":140,"column":16},"end":{"line":145,"column":18}},"17":{"start":{"line":141,"column":20},"end":{"line":141,"column":39}},"18":{"start":{"line":142,"column":20},"end":{"line":142,"column":59}},"19":{"start":{"line":143,"column":20},"end":{"line":143,"column":57}},"20":{"start":{"line":144,"column":20},"end":{"line":144,"column":43}},"21":{"start":{"line":146,"column":16},"end":{"line":156,"column":18}},"22":{"start":{"line":148,"column":20},"end":{"line":152,"column":21}},"23":{"start":{"line":149,"column":24},"end":{"line":151,"column":27}},"24":{"start":{"line":153,"column":20},"end":{"line":153,"column":47}},"25":{"start":{"line":154,"column":20},"end":{"line":154,"column":54}},"26":{"start":{"line":155,"column":20},"end":{"line":155,"column":38}},"27":{"start":{"line":157,"column":16},"end":{"line":174,"column":17}},"28":{"start":{"line":159,"column":20},"end":{"line":162,"column":22}},"29":{"start":{"line":166,"column":20},"end":{"line":173,"column":23}},"30":{"start":{"line":167,"column":24},"end":{"line":172,"column":25}},"31":{"start":{"line":168,"column":28},"end":{"line":168,"column":41}},"32":{"start":{"line":171,"column":28},"end":{"line":171,"column":50}},"33":{"start":{"line":197,"column":12},"end":{"line":197,"column":32}},"34":{"start":{"line":199,"column":12},"end":{"line":199,"column":36}},"35":{"start":{"line":200,"column":12},"end":{"line":243,"column":15}},"36":{"start":{"line":201,"column":16},"end":{"line":204,"column":24}},"37":{"start":{"line":205,"column":16},"end":{"line":210,"column":18}},"38":{"start":{"line":206,"column":20},"end":{"line":206,"column":39}},"39":{"start":{"line":207,"column":20},"end":{"line":207,"column":57}},"40":{"start":{"line":208,"column":20},"end":{"line":208,"column":57}},"41":{"start":{"line":209,"column":20},"end":{"line":209,"column":43}},"42":{"start":{"line":211,"column":16},"end":{"line":225,"column":18}},"43":{"start":{"line":212,"column":20},"end":{"line":212,"column":31}},"44":{"start":{"line":214,"column":20},"end":{"line":218,"column":21}},"45":{"start":{"line":215,"column":24},"end":{"line":217,"column":27}},"46":{"start":{"line":219,"column":20},"end":{"line":219,"column":47}},"47":{"start":{"line":220,"column":20},"end":{"line":220,"column":62}},"48":{"start":{"line":221,"column":20},"end":{"line":221,"column":55}},"49":{"start":{"line":222,"column":20},"end":{"line":222,"column":42}},"50":{"start":{"line":223,"column":20},"end":{"line":223,"column":52}},"51":{"start":{"line":224,"column":20},"end":{"line":224,"column":38}},"52":{"start":{"line":226,"column":16},"end":{"line":242,"column":17}},"53":{"start":{"line":228,"column":20},"end":{"line":231,"column":22}},"54":{"start":{"line":234,"column":20},"end":{"line":241,"column":23}},"55":{"start":{"line":235,"column":24},"end":{"line":240,"column":25}},"56":{"start":{"line":236,"column":28},"end":{"line":236,"column":41}},"57":{"start":{"line":239,"column":28},"end":{"line":239,"column":50}},"58":{"start":{"line":266,"column":12},"end":{"line":266,"column":32}},"59":{"start":{"line":268,"column":12},"end":{"line":268,"column":36}},"60":{"start":{"line":269,"column":12},"end":{"line":323,"column":15}},"61":{"start":{"line":270,"column":16},"end":{"line":273,"column":24}},"62":{"start":{"line":274,"column":16},"end":{"line":322,"column":19}},"63":{"start":{"line":275,"column":20},"end":{"line":321,"column":21}},"64":{"start":{"line":276,"column":24},"end":{"line":276,"column":51}},"65":{"start":{"line":277,"column":24},"end":{"line":277,"column":70}},"66":{"start":{"line":278,"column":24},"end":{"line":278,"column":61}},"67":{"start":{"line":279,"column":24},"end":{"line":279,"column":55}},"68":{"start":{"line":282,"column":24},"end":{"line":287,"column":26}},"69":{"start":{"line":283,"column":28},"end":{"line":283,"column":47}},"70":{"start":{"line":284,"column":28},"end":{"line":284,"column":65}},"71":{"start":{"line":285,"column":28},"end":{"line":285,"column":65}},"72":{"start":{"line":286,"column":28},"end":{"line":286,"column":51}},"73":{"start":{"line":288,"column":24},"end":{"line":302,"column":26}},"74":{"start":{"line":289,"column":28},"end":{"line":289,"column":39}},"75":{"start":{"line":291,"column":28},"end":{"line":295,"column":29}},"76":{"start":{"line":292,"column":32},"end":{"line":294,"column":35}},"77":{"start":{"line":296,"column":28},"end":{"line":296,"column":55}},"78":{"start":{"line":297,"column":28},"end":{"line":297,"column":70}},"79":{"start":{"line":298,"column":28},"end":{"line":298,"column":63}},"80":{"start":{"line":299,"column":28},"end":{"line":299,"column":50}},"81":{"start":{"line":300,"column":28},"end":{"line":300,"column":60}},"82":{"start":{"line":301,"column":28},"end":{"line":301,"column":46}},"83":{"start":{"line":303,"column":24},"end":{"line":303,"column":76}},"84":{"start":{"line":304,"column":24},"end":{"line":320,"column":25}},"85":{"start":{"line":306,"column":28},"end":{"line":309,"column":30}},"86":{"start":{"line":312,"column":28},"end":{"line":319,"column":31}},"87":{"start":{"line":313,"column":32},"end":{"line":318,"column":33}},"88":{"start":{"line":314,"column":36},"end":{"line":314,"column":49}},"89":{"start":{"line":317,"column":36},"end":{"line":317,"column":58}},"90":{"start":{"line":344,"column":12},"end":{"line":344,"column":32}},"91":{"start":{"line":346,"column":12},"end":{"line":346,"column":36}},"92":{"start":{"line":347,"column":12},"end":{"line":396,"column":14}},"93":{"start":{"line":348,"column":16},"end":{"line":390,"column":19}},"94":{"start":{"line":349,"column":20},"end":{"line":349,"column":53}},"95":{"start":{"line":350,"column":20},"end":{"line":354,"column":22}},"96":{"start":{"line":351,"column":24},"end":{"line":353,"column":27}},"97":{"start":{"line":352,"column":28},"end":{"line":352,"column":59}},"98":{"start":{"line":355,"column":20},"end":{"line":389,"column":21}},"99":{"start":{"line":356,"column":24},"end":{"line":364,"column":26}},"100":{"start":{"line":357,"column":28},"end":{"line":361,"column":30}},"101":{"start":{"line":362,"column":28},"end":{"line":362,"column":65}},"102":{"start":{"line":363,"column":28},"end":{"line":363,"column":51}},"103":{"start":{"line":365,"column":24},"end":{"line":368,"column":26}},"104":{"start":{"line":366,"column":28},"end":{"line":366,"column":37}},"105":{"start":{"line":367,"column":28},"end":{"line":367,"column":46}},"106":{"start":{"line":369,"column":24},"end":{"line":385,"column":25}},"107":{"start":{"line":371,"column":28},"end":{"line":374,"column":30}},"108":{"start":{"line":377,"column":28},"end":{"line":384,"column":31}},"109":{"start":{"line":378,"column":32},"end":{"line":383,"column":33}},"110":{"start":{"line":379,"column":36},"end":{"line":379,"column":49}},"111":{"start":{"line":382,"column":36},"end":{"line":382,"column":58}},"112":{"start":{"line":387,"column":24},"end":{"line":387,"column":33}},"113":{"start":{"line":388,"column":24},"end":{"line":388,"column":34}},"114":{"start":{"line":394,"column":20},"end":{"line":394,"column":62}},"115":{"start":{"line":408,"column":12},"end":{"line":408,"column":32}},"116":{"start":{"line":411,"column":12},"end":{"line":415,"column":13}},"117":{"start":{"line":412,"column":16},"end":{"line":414,"column":19}},"118":{"start":{"line":416,"column":12},"end":{"line":416,"column":45}},"119":{"start":{"line":421,"column":4},"end":{"line":421,"column":50}},"120":{"start":{"line":423,"column":4},"end":{"line":423,"column":48}}},"branchMap":{"1":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"2":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":22},"end":{"line":134,"column":29}},{"start":{"line":134,"column":33},"end":{"line":134,"column":35}}]},"3":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":20},"end":{"line":148,"column":20}},{"start":{"line":148,"column":20},"end":{"line":148,"column":20}}]},"4":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":16},"end":{"line":157,"column":16}},{"start":{"line":157,"column":16},"end":{"line":157,"column":16}}]},"5":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":24},"end":{"line":167,"column":24}},{"start":{"line":167,"column":24},"end":{"line":167,"column":24}}]},"6":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":22},"end":{"line":199,"column":29}},{"start":{"line":199,"column":33},"end":{"line":199,"column":35}}]},"7":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":20},"end":{"line":214,"column":20}},{"start":{"line":214,"column":20},"end":{"line":214,"column":20}}]},"8":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":16},"end":{"line":226,"column":16}},{"start":{"line":226,"column":16},"end":{"line":226,"column":16}}]},"9":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":24},"end":{"line":235,"column":24}},{"start":{"line":235,"column":24},"end":{"line":235,"column":24}}]},"10":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":22},"end":{"line":268,"column":29}},{"start":{"line":268,"column":33},"end":{"line":268,"column":35}}]},"11":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":20},"end":{"line":275,"column":20}},{"start":{"line":275,"column":20},"end":{"line":275,"column":20}}]},"12":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":28},"end":{"line":291,"column":28}},{"start":{"line":291,"column":28},"end":{"line":291,"column":28}}]},"13":{"line":303,"type":"cond-expr","locations":[{"start":{"line":303,"column":56},"end":{"line":303,"column":64}},{"start":{"line":303,"column":67},"end":{"line":303,"column":75}}]},"14":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":24},"end":{"line":304,"column":24}},{"start":{"line":304,"column":24},"end":{"line":304,"column":24}}]},"15":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":32},"end":{"line":313,"column":32}},{"start":{"line":313,"column":32},"end":{"line":313,"column":32}}]},"16":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":22},"end":{"line":346,"column":29}},{"start":{"line":346,"column":33},"end":{"line":346,"column":35}}]},"17":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":20},"end":{"line":355,"column":20}},{"start":{"line":355,"column":20},"end":{"line":355,"column":20}}]},"18":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":24},"end":{"line":355,"column":38}},{"start":{"line":355,"column":42},"end":{"line":355,"column":59}}]},"19":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":24},"end":{"line":369,"column":24}},{"start":{"line":369,"column":24},"end":{"line":369,"column":24}}]},"20":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":32},"end":{"line":378,"column":32}},{"start":{"line":378,"column":32},"end":{"line":378,"column":32}}]},"21":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":12},"end":{"line":411,"column":12}},{"start":{"line":411,"column":12},"end":{"line":411,"column":12}}]}},"code":["(function () { YUI.add('gallery-itsamodelsyncpromise', function (Y, NAME) {","","'use strict';","","/**"," *"," * Extention ITSAModelSyncPromise"," *"," *"," * Extends Y.Model with Promised sync-methods. The synclayer can be made just as usual. But instead of calling"," * Model.load and Model.save and Model.destroy, you can use:"," *"," * <b>Model.loadPromise</b>"," * <b>Model.savePromise</b>"," * <b>Model.submitPromise</b>"," * <b>Model.destroyPromise</b>"," *"," * <b>The sync-layer MUST call the callback-function of its related promise-method, otherwise the promises are not resolved.</b>"," *"," * @module gallery-itsamodelsyncpromise"," * @class Y.Model"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","","   var YArray = Y.Array,","   /**","     * Fired when an error occurs, such as when an attribute (or property) doesn't validate or when","     * the sync layer submit-function returns an error.","     * @event error","     * @param e {EventFacade} Event Facade including:","     * @param e.error {any} Error message.","     * @param e.src {String} Source of the error. May be one of the following (or any","     *                     custom error source defined by a Model subclass):","     *","     * `submit`: An error submitting the model from within a sync layer.","     *","     * `attributevalidation`: An error validating an attribute (or property). The attribute (or objectproperty)","     *                        that failed validation will be provided as the `attribute` property on the event facade.","     *","     * @param e.attribute {String} The attribute/property that failed validation.","     * @param e.validationerror {String} The errormessage in case of attribute-validation error.","    **/","    EVT_ERROR = 'error',","   /**","     * Fired after model is submitted from the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SUBMIT = 'submit',","   /**","     * Fired after model is read from the sync layer.","     * @event load","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_LOAD = 'load',","   /**","     * Fired after model is saved through the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SAVE = 'save',","","    PARSED = function (response) {","        if (typeof response === 'string') {","            try {","                return Y.JSON.parse(response);","            } catch (ex) {","                this.fire(EVT_ERROR, {","                    error   : ex,","                    response: response,","                    src     : 'parse'","                });","                return null;","            }","        }","        return response;","    };","","    // -- Mixing extra Methods to Y.Model -----------------------------------","","    function ITSAModelSyncPromise() {}","    Y.mix(ITSAModelSyncPromise.prototype, {","","       /**","         * This method can be defined in descendend classes.<br />","         * If syncPromise is defined, then the syncPromise() definition will be used instead of sync() definition.<br />","         * Always reject the promise in case an invalid 'action' is defined: end the method with this code:","         *   return new Y.Promise(function (resolve, reject) {<br />","         *       reject(new Error('The syncPromise()-method was is called with undefined action: '+action));","         *   });<br />","         *","         * @method syncPromise","         * @param action {String} The sync-action to perform.","         * @param [options] {Object} Sync options. The custom synclayer should pass through all options-properties to the server.","         * @return {Y.Promise} returned response for each 'action' --> response --> resolve(dataobject) OR reject(reason).","         * The returned 'dataobject' might be an object or a string that can be turned into a json-object","        */","","       /**","         * Submits this model to the server.","         *","         * This method delegates to the `sync()` method to perform the actual submit","         * operation, which is Y.Promise. Read the Promise.then() and look for resolve(response) OR reject(reason).","         *","         * A successful submit-operation will also fire a `submit` event, while an unsuccessful","         * submit operation will fire an `error` event with the `src` value \"submit\".","         *","         * <b>CAUTION</b> The sync-method MUST call its callback-function to make the promised resolved.","         *","         * @method submitPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        submitPromise: function(options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var errFunc, successFunc,","                      facade = {","                          options : options","                      };","                errFunc = function(err) {","                    facade.error = err;","                    facade.src   = 'Model.submitPromise()';","                    instance._lazyFireErrorEvent(facade);","                    reject(new Error(err));","                };","                successFunc = function(response) {","                    // Lazy publish.","                    if (!instance._submitEvent) {","                        instance._submitEvent = instance.publish(EVT_SUBMIT, {","                            preventable: false","                        });","                    }","                    facade.response = response;","                    instance.fire(EVT_SUBMIT, facade);","                    resolve(response);","                };","                if (instance.syncPromise) {","                    // use the syncPromise-layer","                    instance.syncPromise('submit', options).then(","                        successFunc,","                        errFunc","                    );","                }","                else {","                    // use the sync-layer","                    instance.sync('submit', options, function (err, response) {","                        if (err) {","                            errFunc(err);","                        }","                        else {","                            successFunc(response);","                        }","                    });","                }","            });","        },","","","        /**","         * Loads this model from the server.","         *","         * This method delegates to the `sync()` method to perform the actual load","         * operation, which is an asynchronous action. Specify a _callback_ function to","         * be notified of success or failure.","         *","         * A successful load operation will fire a `load` event, while an unsuccessful","         * load operation will fire an `error` event with the `src` value \"load\".","         *","         * If the load operation succeeds and one or more of the loaded attributes","         * differ from this model's current attributes, a `change` event will be fired.","         * @method loadPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        loadPromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var errFunc, successFunc,","                      facade = {","                          options : options","                      };","                errFunc = function(err) {","                    facade.error = err;","                    facade.src   = 'Model.loadPromise()';","                    instance._lazyFireErrorEvent(facade);","                    reject(new Error(err));","                };","                successFunc = function(response) {","                    var parsed;","                    // Lazy publish.","                    if (!instance._loadEvent) {","                        instance._loadEvent = instance.publish(EVT_LOAD, {","                            preventable: false","                        });","                    }","                    facade.response = response;","                    parsed = facade.parsed = PARSED(response);","                    instance.setAttrs(parsed, options);","                    instance.changed = {};","                    instance.fire(EVT_LOAD, facade);","                    resolve(response);","                };","                if (instance.syncPromise) {","                    // use the syncPromise-layer","                    instance.syncPromise('read', options).then(","                        successFunc,","                        errFunc","                    );","                }","                else {","                    instance.sync('read', options, function (err, response) {","                        if (err) {","                            errFunc(err);","                        }","                        else {","                            successFunc(response);","                        }","                    });","                }","            });","        },","","       /**","        * Saves this model to the server.","        *","        * This method delegates to the `sync()` method to perform the actual save","        * operation, which is an asynchronous action. Specify a _callback_ function to","        * be notified of success or failure.","        *","        * A successful save operation will fire a `save` event, while an unsuccessful","        * save operation will fire an `error` event with the `src` value \"save\".","        *","        * If the save operation succeeds and one or more of the attributes returned in","        * the server's response differ from this model's current attributes, a","        * `change` event will be fired.","        *","        * @method savePromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        savePromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var errFunc, successFunc, usedmethod,","                      facade = {","                          options : options","                      };","                instance._validate(instance.toJSON(), function (validateErr) {","                    if (validateErr) {","                        facade.error = validateErr;","                        facade.src = 'Model.savePromise() - validate';","                        instance._lazyFireErrorEvent(facade);","                        reject(new Error(validateErr));","                    }","                    else {","                        errFunc = function(err) {","                            facade.error = err;","                            facade.src   = 'Model.savePromise()';","                            instance._lazyFireErrorEvent(facade);","                            reject(new Error(err));","                        };","                        successFunc = function(response) {","                            var parsed;","                            // Lazy publish.","                            if (!instance._saveEvent) {","                                instance._saveEvent = instance.publish(EVT_SAVE, {","                                    preventable: false","                                });","                            }","                            facade.response = response;","                            parsed = facade.parsed = PARSED(response);","                            instance.setAttrs(parsed, options);","                            instance.changed = {};","                            instance.fire(EVT_SAVE, facade);","                            resolve(response);","                        };","                        usedmethod = instance.isNew() ? 'create' : 'update';","                        if (instance.syncPromise) {","                            // use the syncPromise-layer","                            instance.syncPromise(usedmethod, options).then(","                                successFunc,","                                errFunc","                            );","                        }","                        else {","                            instance.sync(usedmethod, options, function (err, response) {","                                if (err) {","                                    errFunc(err);","                                }","                                else {","                                    successFunc(response);","                                }","                            });","                        }","                    }","                });","            });","        },","","      /**","         * Destroys this model instance and removes it from its containing lists, if any.","         *","         * The _callback_, if one is provided, will be called after the model is","         * destroyed.","         *","         * If `options.remove` is `true`, then this method delegates to the `sync()`","         * method to delete the model from the persistence layer, which is an","         * asynchronous action. In this case, the _callback_ (if provided) will be","         * called after the sync layer indicates success or failure of the delete","         * operation.","         *","         * @method destroyPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        destroyPromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                instance.onceAfter('destroy', function () {","                    var errFunc, successFunc, finish;","                    finish = function() {","                        YArray.each(instance.lists.concat(), function (list) {","                            list.remove(instance, options);","                        });","                    };","                    if (options.remove || options['delete']) {","                        errFunc = function(err) {","                            var facade = {","                                error   : err,","                                src     : 'Model.destroyPromise()',","                                options : options","                            };","                            instance._lazyFireErrorEvent(facade);","                            reject(new Error(err));","                        };","                        successFunc = function(response) {","                            finish();","                            resolve(response);","                        };","                        if (instance.syncPromise) {","                            // use the syncPromise-layer","                            instance.syncPromise('delete', options).then(","                                successFunc,","                                errFunc","                            );","                        }","                        else {","                            instance.sync('delete', options, function (err, response) {","                                if (err) {","                                    errFunc(err);","                                }","                                else {","                                    successFunc(response);","                                }","                            });","                        }","                    } else {","                        finish();","                        resolve();","                    }","                });","            }).then(","                function() {","                    // if succeeded, destroy the Model's instance","                    Y.Model.superclass.destroy.call(instance);","                }","            );","        },","","       /**","        * Fires the 'error'-event and -if not published yet- publish it broadcasted to Y.","        * Because the error-event is broadcasted to Y, it can be catched by gallery-itsaerrorreporter.","        *","        * @method _lazyFireErrorEvent","         * @param {Object} [facade] eventfacade.","         * @private","        **/","        _lazyFireErrorEvent : function(facade) {","            var instance = this;","","            // lazy publish","            if (!instance._errorEvent) {","                instance._errorEvent = instance.publish(EVT_ERROR, {","                    broadcast: 1","                });","            }","            instance.fire(EVT_ERROR, facade);","        }","","    }, true);","","    Y.ITSAModelSyncPromise = ITSAModelSyncPromise;","","    Y.Base.mix(Y.Model, [ITSAModelSyncPromise]);","","}, 'gallery-2013.06.26-23-09', {\"requires\": [\"yui-base\", \"base-base\", \"base-build\", \"node-base\", \"json-parse\", \"promise\", \"model\"]});","","}());"]};
}
var __cov_XDpPLj7Fz_gPyxqtPO4DtQ = __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'];
__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['1']++;YUI.add('gallery-itsamodelsyncpromise',function(Y,NAME){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['1']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['2']++;'use strict';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['3']++;var YArray=Y.Array,EVT_ERROR='error',EVT_SUBMIT='submit',EVT_LOAD='load',EVT_SAVE='save',PARSED=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['2']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['4']++;if(typeof response==='string'){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['5']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['6']++;return Y.JSON.parse(response);}catch(ex){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['7']++;this.fire(EVT_ERROR,{error:ex,response:response,src:'parse'});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['8']++;return null;}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['9']++;return response;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['10']++;function ITSAModelSyncPromise(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['3']++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['11']++;Y.mix(ITSAModelSyncPromise.prototype,{submitPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['4']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['12']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['13']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['14']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['5']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['15']++;var errFunc,successFunc,facade={options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['16']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['6']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['17']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['18']++;facade.src='Model.submitPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['19']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['20']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['21']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['7']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['22']++;if(!instance._submitEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['23']++;instance._submitEvent=instance.publish(EVT_SUBMIT,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['24']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['25']++;instance.fire(EVT_SUBMIT,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['26']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['27']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['28']++;instance.syncPromise('submit',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['29']++;instance.sync('submit',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['8']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['30']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['31']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['32']++;successFunc(response);}});}});},loadPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['9']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['33']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['34']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['35']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['10']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['36']++;var errFunc,successFunc,facade={options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['37']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['11']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['38']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['39']++;facade.src='Model.loadPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['40']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['41']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['42']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['12']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['43']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['44']++;if(!instance._loadEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['45']++;instance._loadEvent=instance.publish(EVT_LOAD,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['46']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['47']++;parsed=facade.parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['48']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['49']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['50']++;instance.fire(EVT_LOAD,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['51']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['52']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['53']++;instance.syncPromise('read',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['54']++;instance.sync('read',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['13']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['55']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['56']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['57']++;successFunc(response);}});}});},savePromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['14']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['58']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['59']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['60']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['15']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['61']++;var errFunc,successFunc,usedmethod,facade={options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['62']++;instance._validate(instance.toJSON(),function(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['16']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['63']++;if(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['64']++;facade.error=validateErr;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['65']++;facade.src='Model.savePromise() - validate';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['66']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['67']++;reject(new Error(validateErr));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['68']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['17']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['69']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['70']++;facade.src='Model.savePromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['71']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['72']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['73']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['18']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['74']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['75']++;if(!instance._saveEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['76']++;instance._saveEvent=instance.publish(EVT_SAVE,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['77']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['78']++;parsed=facade.parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['79']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['80']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['81']++;instance.fire(EVT_SAVE,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['82']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['83']++;usedmethod=instance.isNew()?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][0]++,'create'):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][1]++,'update');__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['84']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['85']++;instance.syncPromise(usedmethod,options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['86']++;instance.sync(usedmethod,options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['19']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['87']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['88']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['89']++;successFunc(response);}});}}});});},destroyPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['20']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['90']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['91']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['92']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['21']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['93']++;instance.onceAfter('destroy',function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['22']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['94']++;var errFunc,successFunc,finish;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['95']++;finish=function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['23']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['96']++;YArray.each(instance.lists.concat(),function(list){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['24']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['97']++;list.remove(instance,options);});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['98']++;if((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][0]++,options.remove)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][1]++,options['delete'])){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['99']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['25']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['100']++;var facade={error:err,src:'Model.destroyPromise()',options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['101']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['102']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['103']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['26']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['104']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['105']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['106']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['107']++;instance.syncPromise('delete',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['108']++;instance.sync('delete',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['27']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['109']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['110']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['111']++;successFunc(response);}});}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['112']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['113']++;resolve();}});}).then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['28']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['114']++;Y.Model.superclass.destroy.call(instance);});},_lazyFireErrorEvent:function(facade){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['29']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['115']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['116']++;if(!instance._errorEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['117']++;instance._errorEvent=instance.publish(EVT_ERROR,{broadcast:1});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['118']++;instance.fire(EVT_ERROR,facade);}},true);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['119']++;Y.ITSAModelSyncPromise=ITSAModelSyncPromise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['120']++;Y.Base.mix(Y.Model,[ITSAModelSyncPromise]);},'gallery-2013.06.26-23-09',{'requires':['yui-base','base-base','base-build','node-base','json-parse','promise','model']});
