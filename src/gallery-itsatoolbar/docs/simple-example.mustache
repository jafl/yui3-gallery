<div class="intro">
    <p>This example shows how to plugin <code>ITSAToolbar</code> and create a GUI for the Rich Text Editor.</p>
</div>

<div class="example yui3-skin-sam">
{{>simple-example-js}}
</div>

<h2>Plugin the ITSAToolbar</h2>

<p><code>ITSAToolbar</code> can be plugged-in into any instance of the <code>Rich Text Editor</code></p>

<h3>The Markup</h3>


```
<body class="yui3-skin-sam">
```

<p>There are no other markup requirements in this case, although you may want to have a placeholder to render the tabview into, which is what this example does.</p>

```
<div id="demo">
</div>
```

<h3>The JavaScript</h3>

<p>The minimal requirement for creating a <code>TabView</code> from scratch are the labels and content for each tab.
These are added as the <code>children</code> attribute when creating the <code>TabView</code>.</p>

```
    var tabview = new Y.TabView({
        children: [{
            label: 'foo',
            content: '<p>foo content</p>'
        }, {
            label: 'bar',
            content: '<p>bar content</p>'
        }, {
            label: 'baz',
            content: '<p>baz content</p>'
        }]
    });
```

<h3>Rendering</h3>

<p>Calling render creates the <code>TabView</code>, inserting into the node
passed to render.
</p>

```
    tabview.render('#demo');
```

<h3>Changing the Selected Tab</h3>

<p>By default, clicking a tab makes it selected and shows its content.  You can also do this programmatically
by calling the <code>selectChild</code> method on the <code>TabView</code>, passing it the index of the
tab to be selected.
</p>

```
    tabview.selectChild(2);
```

<h2>Complete Example Source</h2>
```

```