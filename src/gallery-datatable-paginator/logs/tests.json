{
    "name": "gallery-datatable-paginator",
    "passed": 15,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 15,
    "duration": 3323,
    "type": "report",
    "Gallery DataTable-Paginator : class extension basics": {
        "name": "Gallery DataTable-Paginator : class extension basics",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 865,
        "type": "testcase",
        "should be a class": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "should be a class",
            "duration": 274
        },
        "should instantiate as a DT": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "should instantiate as a DT",
            "duration": 221
        },
        "listeners are set": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "listeners are set",
            "duration": 200
        },
        "check ATTR defaults values": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check ATTR defaults values",
            "duration": 134
        }
    },
    "Gallery DataTable-Paginator :  client-side (w/local data)": {
        "name": "Gallery DataTable-Paginator :  client-side (w/local data)",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 851,
        "type": "testcase",
        "check DT pagination setup": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check DT pagination setup",
            "duration": 191
        },
        "check page 1 stats": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check page 1 stats",
            "duration": 174
        },
        "check page 4 stats": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check page 4 stats",
            "duration": 242
        },
        "check destroying the paginator": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check destroying the paginator",
            "duration": 190
        }
    },
    "Gallery DataTable-Paginator :  check reset of data": {
        "name": "Gallery DataTable-Paginator :  check reset of data",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 729,
        "type": "testcase",
        "check DT pagination setup": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check DT pagination setup",
            "duration": 164
        },
        "reset local data to []": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "reset local data to []",
            "duration": 212
        },
        "repopulate with original data, check page 2": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "repopulate with original data, check page 2",
            "duration": 313
        }
    },
    "Gallery DataTable-Paginator : local data client-side pag sorting": {
        "name": "Gallery DataTable-Paginator : local data client-side pag sorting",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 874,
        "type": "testcase",
        "check DT pagination setup": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check DT pagination setup",
            "duration": 166
        },
        "check page 1 stats": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check page 1 stats",
            "duration": 212
        },
        "check page 4 stats": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check page 4 stats",
            "duration": 262
        },
        "check float sorting (dflt column) - Page 1": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "check float sorting (dflt column) - Page 1",
            "duration": 184
        }
    },
    "timestamp": "Wed 12 Dec 2012 03:12:56 PM CST",
    "coverage": {
        "build/cdn_gallery-2012.12.12-21-11/": {
            "path": "build/cdn_gallery-2012.12.12-21-11/",
            "s": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 15,
                "6": 11,
                "7": 11,
                "8": 11,
                "9": 11,
                "10": 11,
                "11": 11,
                "12": 11,
                "13": 11,
                "14": 11,
                "15": 11,
                "16": 11,
                "17": 11,
                "18": 11,
                "19": 15,
                "20": 15,
                "21": 99,
                "22": 0,
                "23": 99,
                "24": 0,
                "25": 0,
                "26": 99,
                "27": 15,
                "28": 15,
                "29": 15,
                "30": 15,
                "31": 16,
                "32": 16,
                "33": 3,
                "34": 3,
                "35": 13,
                "36": 13,
                "37": 13,
                "38": 16,
                "39": 16,
                "40": 16,
                "41": 16,
                "42": 16,
                "43": 16,
                "44": 16,
                "45": 16,
                "46": 16,
                "47": 16,
                "48": 0,
                "49": 0,
                "50": 0,
                "51": 0,
                "52": 0,
                "53": 16,
                "54": 16,
                "55": 16,
                "56": 13,
                "57": 0,
                "58": 0,
                "59": 16,
                "60": 16,
                "61": 16,
                "62": 16,
                "63": 25,
                "64": 10,
                "65": 15,
                "66": 15,
                "67": 13,
                "68": 11,
                "69": 11,
                "70": 1100,
                "71": 2,
                "72": 2,
                "73": 13,
                "74": 13,
                "75": 13,
                "76": 0,
                "77": 0,
                "78": 0,
                "79": 0,
                "80": 0,
                "81": 0,
                "82": 0,
                "83": 0,
                "84": 0,
                "85": 0,
                "86": 0,
                "87": 0,
                "88": 0,
                "89": 0,
                "90": 0,
                "91": 0,
                "92": 0,
                "93": 0,
                "94": 0,
                "95": 0,
                "96": 0,
                "97": 0,
                "98": 0,
                "99": 0,
                "100": 0,
                "101": 0,
                "102": 0,
                "103": 0,
                "104": 0,
                "105": 0,
                "106": 0,
                "107": 0,
                "108": 0,
                "109": 0,
                "110": 0,
                "111": 0,
                "112": 0,
                "113": 11,
                "114": 11,
                "115": 12,
                "116": 1,
                "117": 11,
                "118": 11,
                "119": 0,
                "120": 11,
                "121": 0,
                "122": 11,
                "123": 11,
                "124": 0,
                "125": 0,
                "126": 0,
                "127": 0,
                "128": 0,
                "129": 0,
                "130": 0,
                "131": 0,
                "132": 0,
                "133": 0,
                "134": 11,
                "135": 11,
                "136": 11,
                "137": 11,
                "138": 0,
                "139": 11,
                "140": 11,
                "141": 11,
                "142": 0,
                "143": 0,
                "144": 0,
                "145": 0,
                "146": 0,
                "147": 0,
                "148": 0,
                "149": 0,
                "150": 0,
                "151": 0,
                "152": 0,
                "153": 0,
                "154": 0,
                "155": 0,
                "156": 0,
                "157": 0,
                "158": 0,
                "159": 0,
                "160": 0,
                "161": 0,
                "162": 0,
                "163": 0,
                "164": 0,
                "165": 0,
                "166": 0,
                "167": 0,
                "168": 0,
                "169": 0,
                "170": 0,
                "171": 0,
                "172": 3,
                "173": 3,
                "174": 3,
                "175": 12,
                "176": 1,
                "177": 15,
                "178": 15,
                "179": 15,
                "180": 0,
                "181": 0,
                "182": 0,
                "183": 64,
                "184": 64,
                "185": 64,
                "186": 0,
                "187": 64,
                "188": 0,
                "189": 64,
                "190": 30,
                "191": 15,
                "192": 15,
                "193": 11,
                "194": 11,
                "195": 11,
                "196": 11,
                "197": 11,
                "198": 48,
                "199": 5,
                "200": 43,
                "201": 43,
                "202": 43,
                "203": 11,
                "204": 0,
                "205": 11,
                "206": 0,
                "207": 11,
                "208": 0,
                "209": 11,
                "210": 11,
                "211": 11,
                "212": 15,
                "213": 4,
                "214": 11,
                "215": 11,
                "216": 11,
                "217": 27,
                "218": 9,
                "219": 27,
                "220": 1,
                "221": 1
            },
            "b": {
                "1": [
                    11,
                    4
                ],
                "2": [
                    11,
                    0
                ],
                "3": [
                    0,
                    99
                ],
                "4": [
                    0,
                    99
                ],
                "5": [
                    16,
                    16
                ],
                "6": [
                    3,
                    13
                ],
                "7": [
                    3,
                    0
                ],
                "8": [
                    1,
                    12
                ],
                "9": [
                    13,
                    13
                ],
                "10": [
                    0,
                    0,
                    16
                ],
                "11": [
                    0,
                    0
                ],
                "12": [
                    16,
                    0
                ],
                "13": [
                    10,
                    15
                ],
                "14": [
                    11,
                    2
                ],
                "15": [
                    2,
                    0
                ],
                "16": [
                    0,
                    0
                ],
                "17": [
                    0,
                    0
                ],
                "18": [
                    0,
                    0
                ],
                "19": [
                    0,
                    0
                ],
                "20": [
                    0,
                    0
                ],
                "21": [
                    0,
                    0
                ],
                "22": [
                    0,
                    0
                ],
                "23": [
                    0,
                    0
                ],
                "24": [
                    0,
                    0,
                    0
                ],
                "25": [
                    0,
                    0
                ],
                "26": [
                    0,
                    0
                ],
                "27": [
                    0,
                    0
                ],
                "28": [
                    0,
                    0
                ],
                "29": [
                    0,
                    0,
                    0
                ],
                "30": [
                    0,
                    0
                ],
                "31": [
                    0,
                    0
                ],
                "32": [
                    11,
                    0
                ],
                "33": [
                    1,
                    11
                ],
                "34": [
                    0,
                    11
                ],
                "35": [
                    11,
                    11,
                    0
                ],
                "36": [
                    0,
                    11
                ],
                "37": [
                    11,
                    0,
                    0
                ],
                "38": [
                    0,
                    0,
                    11
                ],
                "39": [
                    0,
                    0
                ],
                "40": [
                    0,
                    0
                ],
                "41": [
                    0,
                    11
                ],
                "42": [
                    11,
                    11,
                    11
                ],
                "43": [
                    0,
                    0
                ],
                "44": [
                    0,
                    0
                ],
                "45": [
                    0,
                    0
                ],
                "46": [
                    0,
                    0
                ],
                "47": [
                    0,
                    0
                ],
                "48": [
                    0,
                    0
                ],
                "49": [
                    0,
                    0
                ],
                "50": [
                    0,
                    0,
                    0
                ],
                "51": [
                    0,
                    0
                ],
                "52": [
                    0,
                    0
                ],
                "53": [
                    0,
                    0
                ],
                "54": [
                    0,
                    0,
                    0
                ],
                "55": [
                    0,
                    0
                ],
                "56": [
                    0,
                    0
                ],
                "57": [
                    0,
                    0
                ],
                "58": [
                    0,
                    0
                ],
                "59": [
                    3,
                    0
                ],
                "60": [
                    1,
                    11
                ],
                "61": [
                    15,
                    0
                ],
                "62": [
                    64,
                    0
                ],
                "63": [
                    64,
                    64
                ],
                "64": [
                    0,
                    64
                ],
                "65": [
                    64,
                    64,
                    64
                ],
                "66": [
                    0,
                    64
                ],
                "67": [
                    64,
                    64,
                    0
                ],
                "68": [
                    11,
                    0
                ],
                "69": [
                    11,
                    11
                ],
                "70": [
                    5,
                    43
                ],
                "71": [
                    43,
                    0
                ],
                "72": [
                    0,
                    11
                ],
                "73": [
                    0,
                    11
                ],
                "74": [
                    0,
                    11
                ],
                "75": [
                    11,
                    0
                ],
                "76": [
                    4,
                    11
                ],
                "77": [
                    9,
                    18
                ]
            },
            "f": {
                "1": 1,
                "2": 15,
                "3": 15,
                "4": 15,
                "5": 99,
                "6": 0,
                "7": 16,
                "8": 13,
                "9": 0,
                "10": 0,
                "11": 16,
                "12": 25,
                "13": 15,
                "14": 13,
                "15": 1100,
                "16": 0,
                "17": 0,
                "18": 0,
                "19": 0,
                "20": 0,
                "21": 0,
                "22": 0,
                "23": 0,
                "24": 11,
                "25": 12,
                "26": 11,
                "27": 0,
                "28": 0,
                "29": 0,
                "30": 0,
                "31": 0,
                "32": 0,
                "33": 3,
                "34": 12,
                "35": 15,
                "36": 64,
                "37": 30,
                "38": 15,
                "39": 11,
                "40": 48,
                "41": 11,
                "42": 15,
                "43": 27
            },
            "fnMap": {
                "1": {
                    "name": "(anonymous_1)",
                    "line": 1,
                    "loc": {
                        "start": {
                            "line": 1,
                            "column": 39
                        },
                        "end": {
                            "line": 1,
                            "column": 58
                        }
                    }
                },
                "2": {
                    "name": "DtPaginator",
                    "line": 89,
                    "loc": {
                        "start": {
                            "line": 89,
                            "column": 0
                        },
                        "end": {
                            "line": 89,
                            "column": 23
                        }
                    }
                },
                "3": {
                    "name": "(anonymous_3)",
                    "line": 292,
                    "loc": {
                        "start": {
                            "line": 292,
                            "column": 17
                        },
                        "end": {
                            "line": 292,
                            "column": 27
                        }
                    }
                },
                "4": {
                    "name": "(anonymous_4)",
                    "line": 336,
                    "loc": {
                        "start": {
                            "line": 336,
                            "column": 16
                        },
                        "end": {
                            "line": 336,
                            "column": 28
                        }
                    }
                },
                "5": {
                    "name": "(anonymous_5)",
                    "line": 340,
                    "loc": {
                        "start": {
                            "line": 340,
                            "column": 42
                        },
                        "end": {
                            "line": 340,
                            "column": 56
                        }
                    }
                },
                "6": {
                    "name": "(anonymous_6)",
                    "line": 346,
                    "loc": {
                        "start": {
                            "line": 346,
                            "column": 34
                        },
                        "end": {
                            "line": 346,
                            "column": 46
                        }
                    }
                },
                "7": {
                    "name": "(anonymous_7)",
                    "line": 382,
                    "loc": {
                        "start": {
                            "line": 382,
                            "column": 24
                        },
                        "end": {
                            "line": 382,
                            "column": 53
                        }
                    }
                },
                "8": {
                    "name": "(anonymous_8)",
                    "line": 477,
                    "loc": {
                        "start": {
                            "line": 477,
                            "column": 22
                        },
                        "end": {
                            "line": 477,
                            "column": 33
                        }
                    }
                },
                "9": {
                    "name": "(anonymous_9)",
                    "line": 492,
                    "loc": {
                        "start": {
                            "line": 492,
                            "column": 24
                        },
                        "end": {
                            "line": 492,
                            "column": 44
                        }
                    }
                },
                "10": {
                    "name": "(anonymous_10)",
                    "line": 505,
                    "loc": {
                        "start": {
                            "line": 505,
                            "column": 24
                        },
                        "end": {
                            "line": 505,
                            "column": 48
                        }
                    }
                },
                "11": {
                    "name": "(anonymous_11)",
                    "line": 521,
                    "loc": {
                        "start": {
                            "line": 521,
                            "column": 27
                        },
                        "end": {
                            "line": 521,
                            "column": 45
                        }
                    }
                },
                "12": {
                    "name": "(anonymous_12)",
                    "line": 543,
                    "loc": {
                        "start": {
                            "line": 543,
                            "column": 21
                        },
                        "end": {
                            "line": 543,
                            "column": 32
                        }
                    }
                },
                "13": {
                    "name": "(anonymous_13)",
                    "line": 549,
                    "loc": {
                        "start": {
                            "line": 549,
                            "column": 27
                        },
                        "end": {
                            "line": 549,
                            "column": 37
                        }
                    }
                },
                "14": {
                    "name": "(anonymous_14)",
                    "line": 561,
                    "loc": {
                        "start": {
                            "line": 561,
                            "column": 20
                        },
                        "end": {
                            "line": 561,
                            "column": 34
                        }
                    }
                },
                "15": {
                    "name": "(anonymous_15)",
                    "line": 564,
                    "loc": {
                        "start": {
                            "line": 564,
                            "column": 22
                        },
                        "end": {
                            "line": 564,
                            "column": 37
                        }
                    }
                },
                "16": {
                    "name": "(anonymous_16)",
                    "line": 587,
                    "loc": {
                        "start": {
                            "line": 587,
                            "column": 28
                        },
                        "end": {
                            "line": 587,
                            "column": 38
                        }
                    }
                },
                "17": {
                    "name": "(anonymous_17)",
                    "line": 594,
                    "loc": {
                        "start": {
                            "line": 594,
                            "column": 43
                        },
                        "end": {
                            "line": 594,
                            "column": 54
                        }
                    }
                },
                "18": {
                    "name": "(anonymous_18)",
                    "line": 604,
                    "loc": {
                        "start": {
                            "line": 604,
                            "column": 23
                        },
                        "end": {
                            "line": 604,
                            "column": 36
                        }
                    }
                },
                "19": {
                    "name": "(anonymous_19)",
                    "line": 643,
                    "loc": {
                        "start": {
                            "line": 643,
                            "column": 18
                        },
                        "end": {
                            "line": 643,
                            "column": 29
                        }
                    }
                },
                "20": {
                    "name": "(anonymous_20)",
                    "line": 660,
                    "loc": {
                        "start": {
                            "line": 660,
                            "column": 18
                        },
                        "end": {
                            "line": 660,
                            "column": 38
                        }
                    }
                },
                "21": {
                    "name": "(anonymous_21)",
                    "line": 698,
                    "loc": {
                        "start": {
                            "line": 698,
                            "column": 21
                        },
                        "end": {
                            "line": 698,
                            "column": 42
                        }
                    }
                },
                "22": {
                    "name": "(anonymous_22)",
                    "line": 721,
                    "loc": {
                        "start": {
                            "line": 721,
                            "column": 19
                        },
                        "end": {
                            "line": 721,
                            "column": 39
                        }
                    }
                },
                "23": {
                    "name": "(anonymous_23)",
                    "line": 739,
                    "loc": {
                        "start": {
                            "line": 739,
                            "column": 22
                        },
                        "end": {
                            "line": 739,
                            "column": 42
                        }
                    }
                },
                "24": {
                    "name": "(anonymous_24)",
                    "line": 758,
                    "loc": {
                        "start": {
                            "line": 758,
                            "column": 18
                        },
                        "end": {
                            "line": 758,
                            "column": 28
                        }
                    }
                },
                "25": {
                    "name": "(anonymous_25)",
                    "line": 782,
                    "loc": {
                        "start": {
                            "line": 782,
                            "column": 21
                        },
                        "end": {
                            "line": 782,
                            "column": 32
                        }
                    }
                },
                "26": {
                    "name": "(anonymous_26)",
                    "line": 868,
                    "loc": {
                        "start": {
                            "line": 868,
                            "column": 19
                        },
                        "end": {
                            "line": 868,
                            "column": 30
                        }
                    }
                },
                "27": {
                    "name": "(anonymous_27)",
                    "line": 894,
                    "loc": {
                        "start": {
                            "line": 894,
                            "column": 19
                        },
                        "end": {
                            "line": 894,
                            "column": 30
                        }
                    }
                },
                "28": {
                    "name": "(anonymous_28)",
                    "line": 930,
                    "loc": {
                        "start": {
                            "line": 930,
                            "column": 22
                        },
                        "end": {
                            "line": 930,
                            "column": 33
                        }
                    }
                },
                "29": {
                    "name": "(anonymous_29)",
                    "line": 972,
                    "loc": {
                        "start": {
                            "line": 972,
                            "column": 25
                        },
                        "end": {
                            "line": 972,
                            "column": 36
                        }
                    }
                },
                "30": {
                    "name": "(anonymous_30)",
                    "line": 1006,
                    "loc": {
                        "start": {
                            "line": 1006,
                            "column": 26
                        },
                        "end": {
                            "line": 1006,
                            "column": 45
                        }
                    }
                },
                "31": {
                    "name": "(anonymous_31)",
                    "line": 1047,
                    "loc": {
                        "start": {
                            "line": 1047,
                            "column": 22
                        },
                        "end": {
                            "line": 1047,
                            "column": 34
                        }
                    }
                },
                "32": {
                    "name": "(anonymous_32)",
                    "line": 1067,
                    "loc": {
                        "start": {
                            "line": 1067,
                            "column": 22
                        },
                        "end": {
                            "line": 1067,
                            "column": 36
                        }
                    }
                },
                "33": {
                    "name": "(anonymous_33)",
                    "line": 1079,
                    "loc": {
                        "start": {
                            "line": 1079,
                            "column": 25
                        },
                        "end": {
                            "line": 1079,
                            "column": 36
                        }
                    }
                },
                "34": {
                    "name": "(anonymous_34)",
                    "line": 1092,
                    "loc": {
                        "start": {
                            "line": 1092,
                            "column": 25
                        },
                        "end": {
                            "line": 1092,
                            "column": 37
                        }
                    }
                },
                "35": {
                    "name": "(anonymous_35)",
                    "line": 1115,
                    "loc": {
                        "start": {
                            "line": 1115,
                            "column": 24
                        },
                        "end": {
                            "line": 1115,
                            "column": 35
                        }
                    }
                },
                "36": {
                    "name": "(anonymous_36)",
                    "line": 1149,
                    "loc": {
                        "start": {
                            "line": 1149,
                            "column": 19
                        },
                        "end": {
                            "line": 1149,
                            "column": 37
                        }
                    }
                },
                "37": {
                    "name": "(anonymous_37)",
                    "line": 1173,
                    "loc": {
                        "start": {
                            "line": 1173,
                            "column": 16
                        },
                        "end": {
                            "line": 1173,
                            "column": 27
                        }
                    }
                },
                "38": {
                    "name": "(anonymous_38)",
                    "line": 1191,
                    "loc": {
                        "start": {
                            "line": 1191,
                            "column": 16
                        },
                        "end": {
                            "line": 1191,
                            "column": 30
                        }
                    }
                },
                "39": {
                    "name": "(anonymous_39)",
                    "line": 1204,
                    "loc": {
                        "start": {
                            "line": 1204,
                            "column": 18
                        },
                        "end": {
                            "line": 1204,
                            "column": 28
                        }
                    }
                },
                "40": {
                    "name": "(anonymous_40)",
                    "line": 1220,
                    "loc": {
                        "start": {
                            "line": 1220,
                            "column": 18
                        },
                        "end": {
                            "line": 1220,
                            "column": 28
                        }
                    }
                },
                "41": {
                    "name": "(anonymous_41)",
                    "line": 1237,
                    "loc": {
                        "start": {
                            "line": 1237,
                            "column": 18
                        },
                        "end": {
                            "line": 1237,
                            "column": 32
                        }
                    }
                },
                "42": {
                    "name": "(anonymous_42)",
                    "line": 1266,
                    "loc": {
                        "start": {
                            "line": 1266,
                            "column": 20
                        },
                        "end": {
                            "line": 1266,
                            "column": 33
                        }
                    }
                },
                "43": {
                    "name": "(anonymous_43)",
                    "line": 1284,
                    "loc": {
                        "start": {
                            "line": 1284,
                            "column": 19
                        },
                        "end": {
                            "line": 1284,
                            "column": 30
                        }
                    }
                }
            },
            "statementMap": {
                "1": {
                    "start": {
                        "line": 1,
                        "column": 0
                    },
                    "end": {
                        "line": 1302,
                        "column": 84
                    }
                },
                "2": {
                    "start": {
                        "line": 89,
                        "column": 0
                    },
                    "end": {
                        "line": 89,
                        "column": 25
                    }
                },
                "3": {
                    "start": {
                        "line": 92,
                        "column": 0
                    },
                    "end": {
                        "line": 209,
                        "column": 2
                    }
                },
                "4": {
                    "start": {
                        "line": 212,
                        "column": 0
                    },
                    "end": {
                        "line": 1296,
                        "column": 3
                    }
                },
                "5": {
                    "start": {
                        "line": 297,
                        "column": 8
                    },
                    "end": {
                        "line": 324,
                        "column": 9
                    }
                },
                "6": {
                    "start": {
                        "line": 299,
                        "column": 12
                    },
                    "end": {
                        "line": 299,
                        "column": 51
                    }
                },
                "7": {
                    "start": {
                        "line": 300,
                        "column": 12
                    },
                    "end": {
                        "line": 300,
                        "column": 37
                    }
                },
                "8": {
                    "start": {
                        "line": 303,
                        "column": 12
                    },
                    "end": {
                        "line": 308,
                        "column": 13
                    }
                },
                "9": {
                    "start": {
                        "line": 304,
                        "column": 16
                    },
                    "end": {
                        "line": 304,
                        "column": 67
                    }
                },
                "10": {
                    "start": {
                        "line": 305,
                        "column": 16
                    },
                    "end": {
                        "line": 305,
                        "column": 118
                    }
                },
                "11": {
                    "start": {
                        "line": 306,
                        "column": 16
                    },
                    "end": {
                        "line": 306,
                        "column": 125
                    }
                },
                "12": {
                    "start": {
                        "line": 307,
                        "column": 16
                    },
                    "end": {
                        "line": 307,
                        "column": 123
                    }
                },
                "13": {
                    "start": {
                        "line": 311,
                        "column": 12
                    },
                    "end": {
                        "line": 311,
                        "column": 100
                    }
                },
                "14": {
                    "start": {
                        "line": 312,
                        "column": 12
                    },
                    "end": {
                        "line": 312,
                        "column": 96
                    }
                },
                "15": {
                    "start": {
                        "line": 313,
                        "column": 12
                    },
                    "end": {
                        "line": 313,
                        "column": 102
                    }
                },
                "16": {
                    "start": {
                        "line": 316,
                        "column": 12
                    },
                    "end": {
                        "line": 316,
                        "column": 94
                    }
                },
                "17": {
                    "start": {
                        "line": 319,
                        "column": 12
                    },
                    "end": {
                        "line": 319,
                        "column": 85
                    }
                },
                "18": {
                    "start": {
                        "line": 322,
                        "column": 12
                    },
                    "end": {
                        "line": 322,
                        "column": 86
                    }
                },
                "19": {
                    "start": {
                        "line": 327,
                        "column": 8
                    },
                    "end": {
                        "line": 327,
                        "column": 20
                    }
                },
                "20": {
                    "start": {
                        "line": 340,
                        "column": 8
                    },
                    "end": {
                        "line": 353,
                        "column": 11
                    }
                },
                "21": {
                    "start": {
                        "line": 341,
                        "column": 12
                    },
                    "end": {
                        "line": 343,
                        "column": 13
                    }
                },
                "22": {
                    "start": {
                        "line": 342,
                        "column": 16
                    },
                    "end": {
                        "line": 342,
                        "column": 23
                    }
                },
                "23": {
                    "start": {
                        "line": 345,
                        "column": 12
                    },
                    "end": {
                        "line": 351,
                        "column": 13
                    }
                },
                "24": {
                    "start": {
                        "line": 346,
                        "column": 16
                    },
                    "end": {
                        "line": 348,
                        "column": 19
                    }
                },
                "25": {
                    "start": {
                        "line": 347,
                        "column": 20
                    },
                    "end": {
                        "line": 347,
                        "column": 32
                    }
                },
                "26": {
                    "start": {
                        "line": 350,
                        "column": 16
                    },
                    "end": {
                        "line": 350,
                        "column": 30
                    }
                },
                "27": {
                    "start": {
                        "line": 356,
                        "column": 8
                    },
                    "end": {
                        "line": 356,
                        "column": 32
                    }
                },
                "28": {
                    "start": {
                        "line": 357,
                        "column": 8
                    },
                    "end": {
                        "line": 357,
                        "column": 35
                    }
                },
                "29": {
                    "start": {
                        "line": 360,
                        "column": 8
                    },
                    "end": {
                        "line": 360,
                        "column": 29
                    }
                },
                "30": {
                    "start": {
                        "line": 361,
                        "column": 8
                    },
                    "end": {
                        "line": 361,
                        "column": 30
                    }
                },
                "31": {
                    "start": {
                        "line": 383,
                        "column": 8
                    },
                    "end": {
                        "line": 388,
                        "column": 89
                    }
                },
                "32": {
                    "start": {
                        "line": 392,
                        "column": 8
                    },
                    "end": {
                        "line": 400,
                        "column": 9
                    }
                },
                "33": {
                    "start": {
                        "line": 393,
                        "column": 12
                    },
                    "end": {
                        "line": 393,
                        "column": 46
                    }
                },
                "34": {
                    "start": {
                        "line": 394,
                        "column": 12
                    },
                    "end": {
                        "line": 394,
                        "column": 60
                    }
                },
                "35": {
                    "start": {
                        "line": 397,
                        "column": 12
                    },
                    "end": {
                        "line": 397,
                        "column": 43
                    }
                },
                "36": {
                    "start": {
                        "line": 398,
                        "column": 12
                    },
                    "end": {
                        "line": 398,
                        "column": 36
                    }
                },
                "37": {
                    "start": {
                        "line": 399,
                        "column": 12
                    },
                    "end": {
                        "line": 399,
                        "column": 74
                    }
                },
                "38": {
                    "start": {
                        "line": 407,
                        "column": 8
                    },
                    "end": {
                        "line": 409,
                        "column": 57
                    }
                },
                "39": {
                    "start": {
                        "line": 410,
                        "column": 8
                    },
                    "end": {
                        "line": 410,
                        "column": 49
                    }
                },
                "40": {
                    "start": {
                        "line": 411,
                        "column": 8
                    },
                    "end": {
                        "line": 411,
                        "column": 57
                    }
                },
                "41": {
                    "start": {
                        "line": 413,
                        "column": 8
                    },
                    "end": {
                        "line": 413,
                        "column": 39
                    }
                },
                "42": {
                    "start": {
                        "line": 414,
                        "column": 8
                    },
                    "end": {
                        "line": 414,
                        "column": 38
                    }
                },
                "43": {
                    "start": {
                        "line": 415,
                        "column": 8
                    },
                    "end": {
                        "line": 415,
                        "column": 36
                    }
                },
                "44": {
                    "start": {
                        "line": 416,
                        "column": 8
                    },
                    "end": {
                        "line": 416,
                        "column": 35
                    }
                },
                "45": {
                    "start": {
                        "line": 417,
                        "column": 8
                    },
                    "end": {
                        "line": 417,
                        "column": 58
                    }
                },
                "46": {
                    "start": {
                        "line": 420,
                        "column": 8
                    },
                    "end": {
                        "line": 420,
                        "column": 64
                    }
                },
                "47": {
                    "start": {
                        "line": 429,
                        "column": 8
                    },
                    "end": {
                        "line": 456,
                        "column": 9
                    }
                },
                "48": {
                    "start": {
                        "line": 436,
                        "column": 16
                    },
                    "end": {
                        "line": 436,
                        "column": 67
                    }
                },
                "49": {
                    "start": {
                        "line": 437,
                        "column": 16
                    },
                    "end": {
                        "line": 437,
                        "column": 72
                    }
                },
                "50": {
                    "start": {
                        "line": 439,
                        "column": 16
                    },
                    "end": {
                        "line": 439,
                        "column": 22
                    }
                },
                "51": {
                    "start": {
                        "line": 446,
                        "column": 16
                    },
                    "end": {
                        "line": 446,
                        "column": 49
                    }
                },
                "52": {
                    "start": {
                        "line": 448,
                        "column": 16
                    },
                    "end": {
                        "line": 448,
                        "column": 22
                    }
                },
                "53": {
                    "start": {
                        "line": 453,
                        "column": 16
                    },
                    "end": {
                        "line": 453,
                        "column": 52
                    }
                },
                "54": {
                    "start": {
                        "line": 458,
                        "column": 8
                    },
                    "end": {
                        "line": 458,
                        "column": 31
                    }
                },
                "55": {
                    "start": {
                        "line": 459,
                        "column": 8
                    },
                    "end": {
                        "line": 459,
                        "column": 80
                    }
                },
                "56": {
                    "start": {
                        "line": 478,
                        "column": 8
                    },
                    "end": {
                        "line": 478,
                        "column": 59
                    }
                },
                "57": {
                    "start": {
                        "line": 493,
                        "column": 8
                    },
                    "end": {
                        "line": 493,
                        "column": 35
                    }
                },
                "58": {
                    "start": {
                        "line": 506,
                        "column": 8
                    },
                    "end": {
                        "line": 508,
                        "column": 11
                    }
                },
                "59": {
                    "start": {
                        "line": 522,
                        "column": 8
                    },
                    "end": {
                        "line": 525,
                        "column": 21
                    }
                },
                "60": {
                    "start": {
                        "line": 527,
                        "column": 8
                    },
                    "end": {
                        "line": 527,
                        "column": 46
                    }
                },
                "61": {
                    "start": {
                        "line": 528,
                        "column": 8
                    },
                    "end": {
                        "line": 528,
                        "column": 51
                    }
                },
                "62": {
                    "start": {
                        "line": 529,
                        "column": 8
                    },
                    "end": {
                        "line": 529,
                        "column": 22
                    }
                },
                "63": {
                    "start": {
                        "line": 544,
                        "column": 8
                    },
                    "end": {
                        "line": 546,
                        "column": 9
                    }
                },
                "64": {
                    "start": {
                        "line": 545,
                        "column": 12
                    },
                    "end": {
                        "line": 545,
                        "column": 19
                    }
                },
                "65": {
                    "start": {
                        "line": 549,
                        "column": 8
                    },
                    "end": {
                        "line": 549,
                        "column": 70
                    }
                },
                "66": {
                    "start": {
                        "line": 549,
                        "column": 39
                    },
                    "end": {
                        "line": 549,
                        "column": 65
                    }
                },
                "67": {
                    "start": {
                        "line": 562,
                        "column": 8
                    },
                    "end": {
                        "line": 569,
                        "column": 9
                    }
                },
                "68": {
                    "start": {
                        "line": 563,
                        "column": 12
                    },
                    "end": {
                        "line": 563,
                        "column": 34
                    }
                },
                "69": {
                    "start": {
                        "line": 564,
                        "column": 12
                    },
                    "end": {
                        "line": 566,
                        "column": 20
                    }
                },
                "70": {
                    "start": {
                        "line": 565,
                        "column": 16
                    },
                    "end": {
                        "line": 565,
                        "column": 56
                    }
                },
                "71": {
                    "start": {
                        "line": 567,
                        "column": 15
                    },
                    "end": {
                        "line": 569,
                        "column": 9
                    }
                },
                "72": {
                    "start": {
                        "line": 568,
                        "column": 12
                    },
                    "end": {
                        "line": 568,
                        "column": 47
                    }
                },
                "73": {
                    "start": {
                        "line": 570,
                        "column": 8
                    },
                    "end": {
                        "line": 570,
                        "column": 66
                    }
                },
                "74": {
                    "start": {
                        "line": 571,
                        "column": 8
                    },
                    "end": {
                        "line": 571,
                        "column": 32
                    }
                },
                "75": {
                    "start": {
                        "line": 572,
                        "column": 8
                    },
                    "end": {
                        "line": 572,
                        "column": 20
                    }
                },
                "76": {
                    "start": {
                        "line": 588,
                        "column": 8
                    },
                    "end": {
                        "line": 590,
                        "column": 36
                    }
                },
                "77": {
                    "start": {
                        "line": 592,
                        "column": 8
                    },
                    "end": {
                        "line": 628,
                        "column": 9
                    }
                },
                "78": {
                    "start": {
                        "line": 594,
                        "column": 12
                    },
                    "end": {
                        "line": 594,
                        "column": 74
                    }
                },
                "79": {
                    "start": {
                        "line": 594,
                        "column": 56
                    },
                    "end": {
                        "line": 594,
                        "column": 70
                    }
                },
                "80": {
                    "start": {
                        "line": 596,
                        "column": 12
                    },
                    "end": {
                        "line": 598,
                        "column": 39
                    }
                },
                "81": {
                    "start": {
                        "line": 604,
                        "column": 12
                    },
                    "end": {
                        "line": 624,
                        "column": 15
                    }
                },
                "82": {
                    "start": {
                        "line": 605,
                        "column": 16
                    },
                    "end": {
                        "line": 605,
                        "column": 36
                    }
                },
                "83": {
                    "start": {
                        "line": 606,
                        "column": 16
                    },
                    "end": {
                        "line": 621,
                        "column": 17
                    }
                },
                "84": {
                    "start": {
                        "line": 608,
                        "column": 20
                    },
                    "end": {
                        "line": 608,
                        "column": 73
                    }
                },
                "85": {
                    "start": {
                        "line": 610,
                        "column": 23
                    },
                    "end": {
                        "line": 621,
                        "column": 17
                    }
                },
                "86": {
                    "start": {
                        "line": 612,
                        "column": 20
                    },
                    "end": {
                        "line": 612,
                        "column": 73
                    }
                },
                "87": {
                    "start": {
                        "line": 614,
                        "column": 23
                    },
                    "end": {
                        "line": 621,
                        "column": 17
                    }
                },
                "88": {
                    "start": {
                        "line": 617,
                        "column": 20
                    },
                    "end": {
                        "line": 618,
                        "column": 39
                    }
                },
                "89": {
                    "start": {
                        "line": 619,
                        "column": 20
                    },
                    "end": {
                        "line": 619,
                        "column": 79
                    }
                },
                "90": {
                    "start": {
                        "line": 622,
                        "column": 16
                    },
                    "end": {
                        "line": 622,
                        "column": 27
                    }
                },
                "91": {
                    "start": {
                        "line": 626,
                        "column": 12
                    },
                    "end": {
                        "line": 626,
                        "column": 37
                    }
                },
                "92": {
                    "start": {
                        "line": 630,
                        "column": 8
                    },
                    "end": {
                        "line": 630,
                        "column": 32
                    }
                },
                "93": {
                    "start": {
                        "line": 644,
                        "column": 8
                    },
                    "end": {
                        "line": 644,
                        "column": 32
                    }
                },
                "94": {
                    "start": {
                        "line": 661,
                        "column": 8
                    },
                    "end": {
                        "line": 662,
                        "column": 42
                    }
                },
                "95": {
                    "start": {
                        "line": 664,
                        "column": 8
                    },
                    "end": {
                        "line": 681,
                        "column": 9
                    }
                },
                "96": {
                    "start": {
                        "line": 665,
                        "column": 12
                    },
                    "end": {
                        "line": 667,
                        "column": 13
                    }
                },
                "97": {
                    "start": {
                        "line": 666,
                        "column": 16
                    },
                    "end": {
                        "line": 666,
                        "column": 31
                    }
                },
                "98": {
                    "start": {
                        "line": 669,
                        "column": 12
                    },
                    "end": {
                        "line": 669,
                        "column": 37
                    }
                },
                "99": {
                    "start": {
                        "line": 670,
                        "column": 12
                    },
                    "end": {
                        "line": 670,
                        "column": 25
                    }
                },
                "100": {
                    "start": {
                        "line": 672,
                        "column": 12
                    },
                    "end": {
                        "line": 678,
                        "column": 13
                    }
                },
                "101": {
                    "start": {
                        "line": 673,
                        "column": 16
                    },
                    "end": {
                        "line": 673,
                        "column": 53
                    }
                },
                "102": {
                    "start": {
                        "line": 675,
                        "column": 16
                    },
                    "end": {
                        "line": 675,
                        "column": 47
                    }
                },
                "103": {
                    "start": {
                        "line": 676,
                        "column": 16
                    },
                    "end": {
                        "line": 676,
                        "column": 46
                    }
                },
                "104": {
                    "start": {
                        "line": 677,
                        "column": 16
                    },
                    "end": {
                        "line": 677,
                        "column": 60
                    }
                },
                "105": {
                    "start": {
                        "line": 680,
                        "column": 12
                    },
                    "end": {
                        "line": 680,
                        "column": 41
                    }
                },
                "106": {
                    "start": {
                        "line": 699,
                        "column": 8
                    },
                    "end": {
                        "line": 700,
                        "column": 23
                    }
                },
                "107": {
                    "start": {
                        "line": 702,
                        "column": 8
                    },
                    "end": {
                        "line": 706,
                        "column": 9
                    }
                },
                "108": {
                    "start": {
                        "line": 703,
                        "column": 12
                    },
                    "end": {
                        "line": 703,
                        "column": 37
                    }
                },
                "109": {
                    "start": {
                        "line": 704,
                        "column": 12
                    },
                    "end": {
                        "line": 704,
                        "column": 36
                    }
                },
                "110": {
                    "start": {
                        "line": 705,
                        "column": 12
                    },
                    "end": {
                        "line": 705,
                        "column": 39
                    }
                },
                "111": {
                    "start": {
                        "line": 722,
                        "column": 8
                    },
                    "end": {
                        "line": 725,
                        "column": 11
                    }
                },
                "112": {
                    "start": {
                        "line": 740,
                        "column": 8
                    },
                    "end": {
                        "line": 743,
                        "column": 11
                    }
                },
                "113": {
                    "start": {
                        "line": 759,
                        "column": 8
                    },
                    "end": {
                        "line": 761,
                        "column": 9
                    }
                },
                "114": {
                    "start": {
                        "line": 760,
                        "column": 12
                    },
                    "end": {
                        "line": 760,
                        "column": 37
                    }
                },
                "115": {
                    "start": {
                        "line": 783,
                        "column": 8
                    },
                    "end": {
                        "line": 785,
                        "column": 9
                    }
                },
                "116": {
                    "start": {
                        "line": 784,
                        "column": 12
                    },
                    "end": {
                        "line": 784,
                        "column": 19
                    }
                },
                "117": {
                    "start": {
                        "line": 787,
                        "column": 8
                    },
                    "end": {
                        "line": 787,
                        "column": 33
                    }
                },
                "118": {
                    "start": {
                        "line": 795,
                        "column": 8
                    },
                    "end": {
                        "line": 809,
                        "column": 9
                    }
                },
                "119": {
                    "start": {
                        "line": 797,
                        "column": 12
                    },
                    "end": {
                        "line": 797,
                        "column": 38
                    }
                },
                "120": {
                    "start": {
                        "line": 799,
                        "column": 15
                    },
                    "end": {
                        "line": 809,
                        "column": 9
                    }
                },
                "121": {
                    "start": {
                        "line": 802,
                        "column": 12
                    },
                    "end": {
                        "line": 802,
                        "column": 35
                    }
                },
                "122": {
                    "start": {
                        "line": 807,
                        "column": 12
                    },
                    "end": {
                        "line": 807,
                        "column": 38
                    }
                },
                "123": {
                    "start": {
                        "line": 819,
                        "column": 8
                    },
                    "end": {
                        "line": 850,
                        "column": 9
                    }
                },
                "124": {
                    "start": {
                        "line": 823,
                        "column": 16
                    },
                    "end": {
                        "line": 823,
                        "column": 102
                    }
                },
                "125": {
                    "start": {
                        "line": 826,
                        "column": 16
                    },
                    "end": {
                        "line": 830,
                        "column": 17
                    }
                },
                "126": {
                    "start": {
                        "line": 827,
                        "column": 20
                    },
                    "end": {
                        "line": 827,
                        "column": 47
                    }
                },
                "127": {
                    "start": {
                        "line": 829,
                        "column": 20
                    },
                    "end": {
                        "line": 829,
                        "column": 47
                    }
                },
                "128": {
                    "start": {
                        "line": 832,
                        "column": 16
                    },
                    "end": {
                        "line": 832,
                        "column": 22
                    }
                },
                "129": {
                    "start": {
                        "line": 835,
                        "column": 16
                    },
                    "end": {
                        "line": 835,
                        "column": 133
                    }
                },
                "130": {
                    "start": {
                        "line": 838,
                        "column": 16
                    },
                    "end": {
                        "line": 842,
                        "column": 17
                    }
                },
                "131": {
                    "start": {
                        "line": 839,
                        "column": 20
                    },
                    "end": {
                        "line": 839,
                        "column": 47
                    }
                },
                "132": {
                    "start": {
                        "line": 841,
                        "column": 20
                    },
                    "end": {
                        "line": 841,
                        "column": 44
                    }
                },
                "133": {
                    "start": {
                        "line": 844,
                        "column": 16
                    },
                    "end": {
                        "line": 844,
                        "column": 22
                    }
                },
                "134": {
                    "start": {
                        "line": 847,
                        "column": 16
                    },
                    "end": {
                        "line": 847,
                        "column": 38
                    }
                },
                "135": {
                    "start": {
                        "line": 848,
                        "column": 16
                    },
                    "end": {
                        "line": 848,
                        "column": 22
                    }
                },
                "136": {
                    "start": {
                        "line": 870,
                        "column": 8
                    },
                    "end": {
                        "line": 870,
                        "column": 37
                    }
                },
                "137": {
                    "start": {
                        "line": 874,
                        "column": 8
                    },
                    "end": {
                        "line": 876,
                        "column": 9
                    }
                },
                "138": {
                    "start": {
                        "line": 875,
                        "column": 12
                    },
                    "end": {
                        "line": 875,
                        "column": 22
                    }
                },
                "139": {
                    "start": {
                        "line": 878,
                        "column": 8
                    },
                    "end": {
                        "line": 878,
                        "column": 35
                    }
                },
                "140": {
                    "start": {
                        "line": 882,
                        "column": 8
                    },
                    "end": {
                        "line": 882,
                        "column": 35
                    }
                },
                "141": {
                    "start": {
                        "line": 884,
                        "column": 8
                    },
                    "end": {
                        "line": 884,
                        "column": 57
                    }
                },
                "142": {
                    "start": {
                        "line": 895,
                        "column": 8
                    },
                    "end": {
                        "line": 897,
                        "column": 72
                    }
                },
                "143": {
                    "start": {
                        "line": 899,
                        "column": 8
                    },
                    "end": {
                        "line": 903,
                        "column": 9
                    }
                },
                "144": {
                    "start": {
                        "line": 900,
                        "column": 12
                    },
                    "end": {
                        "line": 900,
                        "column": 41
                    }
                },
                "145": {
                    "start": {
                        "line": 902,
                        "column": 12
                    },
                    "end": {
                        "line": 902,
                        "column": 42
                    }
                },
                "146": {
                    "start": {
                        "line": 905,
                        "column": 8
                    },
                    "end": {
                        "line": 908,
                        "column": 11
                    }
                },
                "147": {
                    "start": {
                        "line": 931,
                        "column": 8
                    },
                    "end": {
                        "line": 933,
                        "column": 74
                    }
                },
                "148": {
                    "start": {
                        "line": 935,
                        "column": 8
                    },
                    "end": {
                        "line": 939,
                        "column": 9
                    }
                },
                "149": {
                    "start": {
                        "line": 936,
                        "column": 12
                    },
                    "end": {
                        "line": 936,
                        "column": 44
                    }
                },
                "150": {
                    "start": {
                        "line": 938,
                        "column": 12
                    },
                    "end": {
                        "line": 938,
                        "column": 45
                    }
                },
                "151": {
                    "start": {
                        "line": 941,
                        "column": 8
                    },
                    "end": {
                        "line": 944,
                        "column": 11
                    }
                },
                "152": {
                    "start": {
                        "line": 973,
                        "column": 8
                    },
                    "end": {
                        "line": 975,
                        "column": 9
                    }
                },
                "153": {
                    "start": {
                        "line": 974,
                        "column": 12
                    },
                    "end": {
                        "line": 974,
                        "column": 19
                    }
                },
                "154": {
                    "start": {
                        "line": 977,
                        "column": 8
                    },
                    "end": {
                        "line": 987,
                        "column": 9
                    }
                },
                "155": {
                    "start": {
                        "line": 981,
                        "column": 16
                    },
                    "end": {
                        "line": 981,
                        "column": 67
                    }
                },
                "156": {
                    "start": {
                        "line": 982,
                        "column": 16
                    },
                    "end": {
                        "line": 982,
                        "column": 22
                    }
                },
                "157": {
                    "start": {
                        "line": 985,
                        "column": 16
                    },
                    "end": {
                        "line": 985,
                        "column": 46
                    }
                },
                "158": {
                    "start": {
                        "line": 1007,
                        "column": 8
                    },
                    "end": {
                        "line": 1009,
                        "column": 132
                    }
                },
                "159": {
                    "start": {
                        "line": 1013,
                        "column": 8
                    },
                    "end": {
                        "line": 1035,
                        "column": 9
                    }
                },
                "160": {
                    "start": {
                        "line": 1014,
                        "column": 12
                    },
                    "end": {
                        "line": 1034,
                        "column": 13
                    }
                },
                "161": {
                    "start": {
                        "line": 1017,
                        "column": 16
                    },
                    "end": {
                        "line": 1029,
                        "column": 17
                    }
                },
                "162": {
                    "start": {
                        "line": 1019,
                        "column": 20
                    },
                    "end": {
                        "line": 1019,
                        "column": 56
                    }
                },
                "163": {
                    "start": {
                        "line": 1020,
                        "column": 20
                    },
                    "end": {
                        "line": 1020,
                        "column": 48
                    }
                },
                "164": {
                    "start": {
                        "line": 1021,
                        "column": 20
                    },
                    "end": {
                        "line": 1021,
                        "column": 59
                    }
                },
                "165": {
                    "start": {
                        "line": 1022,
                        "column": 20
                    },
                    "end": {
                        "line": 1022,
                        "column": 34
                    }
                },
                "166": {
                    "start": {
                        "line": 1023,
                        "column": 20
                    },
                    "end": {
                        "line": 1023,
                        "column": 44
                    }
                },
                "167": {
                    "start": {
                        "line": 1027,
                        "column": 20
                    },
                    "end": {
                        "line": 1027,
                        "column": 67
                    }
                },
                "168": {
                    "start": {
                        "line": 1033,
                        "column": 16
                    },
                    "end": {
                        "line": 1033,
                        "column": 49
                    }
                },
                "169": {
                    "start": {
                        "line": 1036,
                        "column": 8
                    },
                    "end": {
                        "line": 1036,
                        "column": 31
                    }
                },
                "170": {
                    "start": {
                        "line": 1048,
                        "column": 8
                    },
                    "end": {
                        "line": 1048,
                        "column": 42
                    }
                },
                "171": {
                    "start": {
                        "line": 1068,
                        "column": 8
                    },
                    "end": {
                        "line": 1068,
                        "column": 48
                    }
                },
                "172": {
                    "start": {
                        "line": 1080,
                        "column": 8
                    },
                    "end": {
                        "line": 1080,
                        "column": 37
                    }
                },
                "173": {
                    "start": {
                        "line": 1081,
                        "column": 8
                    },
                    "end": {
                        "line": 1081,
                        "column": 44
                    }
                },
                "174": {
                    "start": {
                        "line": 1082,
                        "column": 8
                    },
                    "end": {
                        "line": 1082,
                        "column": 70
                    }
                },
                "175": {
                    "start": {
                        "line": 1093,
                        "column": 8
                    },
                    "end": {
                        "line": 1095,
                        "column": 9
                    }
                },
                "176": {
                    "start": {
                        "line": 1094,
                        "column": 12
                    },
                    "end": {
                        "line": 1094,
                        "column": 44
                    }
                },
                "177": {
                    "start": {
                        "line": 1116,
                        "column": 8
                    },
                    "end": {
                        "line": 1116,
                        "column": 84
                    }
                },
                "178": {
                    "start": {
                        "line": 1117,
                        "column": 8
                    },
                    "end": {
                        "line": 1119,
                        "column": 9
                    }
                },
                "179": {
                    "start": {
                        "line": 1118,
                        "column": 12
                    },
                    "end": {
                        "line": 1118,
                        "column": 25
                    }
                },
                "180": {
                    "start": {
                        "line": 1121,
                        "column": 8
                    },
                    "end": {
                        "line": 1121,
                        "column": 92
                    }
                },
                "181": {
                    "start": {
                        "line": 1122,
                        "column": 8
                    },
                    "end": {
                        "line": 1122,
                        "column": 37
                    }
                },
                "182": {
                    "start": {
                        "line": 1123,
                        "column": 8
                    },
                    "end": {
                        "line": 1123,
                        "column": 20
                    }
                },
                "183": {
                    "start": {
                        "line": 1150,
                        "column": 8
                    },
                    "end": {
                        "line": 1151,
                        "column": 30
                    }
                },
                "184": {
                    "start": {
                        "line": 1153,
                        "column": 8
                    },
                    "end": {
                        "line": 1153,
                        "column": 28
                    }
                },
                "185": {
                    "start": {
                        "line": 1155,
                        "column": 8
                    },
                    "end": {
                        "line": 1157,
                        "column": 9
                    }
                },
                "186": {
                    "start": {
                        "line": 1156,
                        "column": 12
                    },
                    "end": {
                        "line": 1156,
                        "column": 35
                    }
                },
                "187": {
                    "start": {
                        "line": 1159,
                        "column": 8
                    },
                    "end": {
                        "line": 1161,
                        "column": 9
                    }
                },
                "188": {
                    "start": {
                        "line": 1160,
                        "column": 12
                    },
                    "end": {
                        "line": 1160,
                        "column": 37
                    }
                },
                "189": {
                    "start": {
                        "line": 1163,
                        "column": 8
                    },
                    "end": {
                        "line": 1163,
                        "column": 21
                    }
                },
                "190": {
                    "start": {
                        "line": 1174,
                        "column": 8
                    },
                    "end": {
                        "line": 1180,
                        "column": 10
                    }
                },
                "191": {
                    "start": {
                        "line": 1192,
                        "column": 8
                    },
                    "end": {
                        "line": 1192,
                        "column": 39
                    }
                },
                "192": {
                    "start": {
                        "line": 1193,
                        "column": 8
                    },
                    "end": {
                        "line": 1193,
                        "column": 35
                    }
                },
                "193": {
                    "start": {
                        "line": 1205,
                        "column": 8
                    },
                    "end": {
                        "line": 1205,
                        "column": 21
                    }
                },
                "194": {
                    "start": {
                        "line": 1206,
                        "column": 8
                    },
                    "end": {
                        "line": 1210,
                        "column": 9
                    }
                },
                "195": {
                    "start": {
                        "line": 1207,
                        "column": 12
                    },
                    "end": {
                        "line": 1207,
                        "column": 138
                    }
                },
                "196": {
                    "start": {
                        "line": 1209,
                        "column": 12
                    },
                    "end": {
                        "line": 1209,
                        "column": 44
                    }
                },
                "197": {
                    "start": {
                        "line": 1211,
                        "column": 8
                    },
                    "end": {
                        "line": 1211,
                        "column": 19
                    }
                },
                "198": {
                    "start": {
                        "line": 1221,
                        "column": 8
                    },
                    "end": {
                        "line": 1223,
                        "column": 9
                    }
                },
                "199": {
                    "start": {
                        "line": 1222,
                        "column": 12
                    },
                    "end": {
                        "line": 1222,
                        "column": 24
                    }
                },
                "200": {
                    "start": {
                        "line": 1224,
                        "column": 8
                    },
                    "end": {
                        "line": 1224,
                        "column": 147
                    }
                },
                "201": {
                    "start": {
                        "line": 1226,
                        "column": 8
                    },
                    "end": {
                        "line": 1226,
                        "column": 40
                    }
                },
                "202": {
                    "start": {
                        "line": 1227,
                        "column": 8
                    },
                    "end": {
                        "line": 1227,
                        "column": 19
                    }
                },
                "203": {
                    "start": {
                        "line": 1238,
                        "column": 8
                    },
                    "end": {
                        "line": 1240,
                        "column": 9
                    }
                },
                "204": {
                    "start": {
                        "line": 1239,
                        "column": 12
                    },
                    "end": {
                        "line": 1239,
                        "column": 24
                    }
                },
                "205": {
                    "start": {
                        "line": 1242,
                        "column": 8
                    },
                    "end": {
                        "line": 1244,
                        "column": 9
                    }
                },
                "206": {
                    "start": {
                        "line": 1243,
                        "column": 12
                    },
                    "end": {
                        "line": 1243,
                        "column": 35
                    }
                },
                "207": {
                    "start": {
                        "line": 1246,
                        "column": 8
                    },
                    "end": {
                        "line": 1248,
                        "column": 9
                    }
                },
                "208": {
                    "start": {
                        "line": 1247,
                        "column": 12
                    },
                    "end": {
                        "line": 1247,
                        "column": 42
                    }
                },
                "209": {
                    "start": {
                        "line": 1250,
                        "column": 8
                    },
                    "end": {
                        "line": 1252,
                        "column": 9
                    }
                },
                "210": {
                    "start": {
                        "line": 1251,
                        "column": 12
                    },
                    "end": {
                        "line": 1251,
                        "column": 40
                    }
                },
                "211": {
                    "start": {
                        "line": 1253,
                        "column": 8
                    },
                    "end": {
                        "line": 1253,
                        "column": 19
                    }
                },
                "212": {
                    "start": {
                        "line": 1267,
                        "column": 8
                    },
                    "end": {
                        "line": 1269,
                        "column": 9
                    }
                },
                "213": {
                    "start": {
                        "line": 1268,
                        "column": 12
                    },
                    "end": {
                        "line": 1268,
                        "column": 19
                    }
                },
                "214": {
                    "start": {
                        "line": 1270,
                        "column": 8
                    },
                    "end": {
                        "line": 1270,
                        "column": 29
                    }
                },
                "215": {
                    "start": {
                        "line": 1271,
                        "column": 8
                    },
                    "end": {
                        "line": 1271,
                        "column": 27
                    }
                },
                "216": {
                    "start": {
                        "line": 1272,
                        "column": 8
                    },
                    "end": {
                        "line": 1272,
                        "column": 19
                    }
                },
                "217": {
                    "start": {
                        "line": 1285,
                        "column": 8
                    },
                    "end": {
                        "line": 1287,
                        "column": 9
                    }
                },
                "218": {
                    "start": {
                        "line": 1286,
                        "column": 12
                    },
                    "end": {
                        "line": 1286,
                        "column": 35
                    }
                },
                "219": {
                    "start": {
                        "line": 1288,
                        "column": 8
                    },
                    "end": {
                        "line": 1288,
                        "column": 28
                    }
                },
                "220": {
                    "start": {
                        "line": 1298,
                        "column": 0
                    },
                    "end": {
                        "line": 1298,
                        "column": 36
                    }
                },
                "221": {
                    "start": {
                        "line": 1299,
                        "column": 0
                    },
                    "end": {
                        "line": 1299,
                        "column": 49
                    }
                }
            },
            "branchMap": {
                "1": {
                    "line": 297,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 297,
                                "column": 8
                            },
                            "end": {
                                "line": 297,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 297,
                                "column": 8
                            },
                            "end": {
                                "line": 297,
                                "column": 8
                            }
                        }
                    ]
                },
                "2": {
                    "line": 303,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 303,
                                "column": 12
                            },
                            "end": {
                                "line": 303,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 303,
                                "column": 12
                            },
                            "end": {
                                "line": 303,
                                "column": 12
                            }
                        }
                    ]
                },
                "3": {
                    "line": 341,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 341,
                                "column": 12
                            },
                            "end": {
                                "line": 341,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 341,
                                "column": 12
                            },
                            "end": {
                                "line": 341,
                                "column": 12
                            }
                        }
                    ]
                },
                "4": {
                    "line": 345,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 345,
                                "column": 12
                            },
                            "end": {
                                "line": 345,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 345,
                                "column": 12
                            },
                            "end": {
                                "line": 345,
                                "column": 12
                            }
                        }
                    ]
                },
                "5": {
                    "line": 387,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 387,
                                "column": 20
                            },
                            "end": {
                                "line": 387,
                                "column": 38
                            }
                        },
                        {
                            "start": {
                                "line": 387,
                                "column": 42
                            },
                            "end": {
                                "line": 387,
                                "column": 44
                            }
                        }
                    ]
                },
                "6": {
                    "line": 392,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 392,
                                "column": 8
                            },
                            "end": {
                                "line": 392,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 392,
                                "column": 8
                            },
                            "end": {
                                "line": 392,
                                "column": 8
                            }
                        }
                    ]
                },
                "7": {
                    "line": 394,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 394,
                                "column": 21
                            },
                            "end": {
                                "line": 394,
                                "column": 43
                            }
                        },
                        {
                            "start": {
                                "line": 394,
                                "column": 47
                            },
                            "end": {
                                "line": 394,
                                "column": 59
                            }
                        }
                    ]
                },
                "8": {
                    "line": 399,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 399,
                                "column": 54
                            },
                            "end": {
                                "line": 399,
                                "column": 66
                            }
                        },
                        {
                            "start": {
                                "line": 399,
                                "column": 69
                            },
                            "end": {
                                "line": 399,
                                "column": 73
                            }
                        }
                    ]
                },
                "9": {
                    "line": 399,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 399,
                                "column": 21
                            },
                            "end": {
                                "line": 399,
                                "column": 26
                            }
                        },
                        {
                            "start": {
                                "line": 399,
                                "column": 30
                            },
                            "end": {
                                "line": 399,
                                "column": 49
                            }
                        }
                    ]
                },
                "10": {
                    "line": 429,
                    "type": "switch",
                    "locations": [
                        {
                            "start": {
                                "line": 436,
                                "column": 16
                            },
                            "end": {
                                "line": 439,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 446,
                                "column": 16
                            },
                            "end": {
                                "line": 448,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 453,
                                "column": 16
                            },
                            "end": {
                                "line": 453,
                                "column": 52
                            }
                        }
                    ]
                },
                "11": {
                    "line": 436,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 436,
                                "column": 27
                            },
                            "end": {
                                "line": 436,
                                "column": 60
                            }
                        },
                        {
                            "start": {
                                "line": 436,
                                "column": 64
                            },
                            "end": {
                                "line": 436,
                                "column": 66
                            }
                        }
                    ]
                },
                "12": {
                    "line": 524,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 524,
                                "column": 20
                            },
                            "end": {
                                "line": 524,
                                "column": 36
                            }
                        },
                        {
                            "start": {
                                "line": 524,
                                "column": 40
                            },
                            "end": {
                                "line": 524,
                                "column": 42
                            }
                        }
                    ]
                },
                "13": {
                    "line": 544,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 544,
                                "column": 8
                            },
                            "end": {
                                "line": 544,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 544,
                                "column": 8
                            },
                            "end": {
                                "line": 544,
                                "column": 8
                            }
                        }
                    ]
                },
                "14": {
                    "line": 562,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 562,
                                "column": 8
                            },
                            "end": {
                                "line": 562,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 562,
                                "column": 8
                            },
                            "end": {
                                "line": 562,
                                "column": 8
                            }
                        }
                    ]
                },
                "15": {
                    "line": 567,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 567,
                                "column": 15
                            },
                            "end": {
                                "line": 567,
                                "column": 15
                            }
                        },
                        {
                            "start": {
                                "line": 567,
                                "column": 15
                            },
                            "end": {
                                "line": 567,
                                "column": 15
                            }
                        }
                    ]
                },
                "16": {
                    "line": 592,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 592,
                                "column": 8
                            },
                            "end": {
                                "line": 592,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 592,
                                "column": 8
                            },
                            "end": {
                                "line": 592,
                                "column": 8
                            }
                        }
                    ]
                },
                "17": {
                    "line": 606,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 606,
                                "column": 16
                            },
                            "end": {
                                "line": 606,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 606,
                                "column": 16
                            },
                            "end": {
                                "line": 606,
                                "column": 16
                            }
                        }
                    ]
                },
                "18": {
                    "line": 608,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 608,
                                "column": 54
                            },
                            "end": {
                                "line": 608,
                                "column": 62
                            }
                        },
                        {
                            "start": {
                                "line": 608,
                                "column": 65
                            },
                            "end": {
                                "line": 608,
                                "column": 72
                            }
                        }
                    ]
                },
                "19": {
                    "line": 610,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 610,
                                "column": 23
                            },
                            "end": {
                                "line": 610,
                                "column": 23
                            }
                        },
                        {
                            "start": {
                                "line": 610,
                                "column": 23
                            },
                            "end": {
                                "line": 610,
                                "column": 23
                            }
                        }
                    ]
                },
                "20": {
                    "line": 612,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 612,
                                "column": 54
                            },
                            "end": {
                                "line": 612,
                                "column": 62
                            }
                        },
                        {
                            "start": {
                                "line": 612,
                                "column": 65
                            },
                            "end": {
                                "line": 612,
                                "column": 72
                            }
                        }
                    ]
                },
                "21": {
                    "line": 614,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 614,
                                "column": 23
                            },
                            "end": {
                                "line": 614,
                                "column": 23
                            }
                        },
                        {
                            "start": {
                                "line": 614,
                                "column": 23
                            },
                            "end": {
                                "line": 614,
                                "column": 23
                            }
                        }
                    ]
                },
                "22": {
                    "line": 619,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 619,
                                "column": 45
                            },
                            "end": {
                                "line": 619,
                                "column": 60
                            }
                        },
                        {
                            "start": {
                                "line": 619,
                                "column": 63
                            },
                            "end": {
                                "line": 619,
                                "column": 78
                            }
                        }
                    ]
                },
                "23": {
                    "line": 661,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 661,
                                "column": 55
                            },
                            "end": {
                                "line": 661,
                                "column": 71
                            }
                        },
                        {
                            "start": {
                                "line": 661,
                                "column": 74
                            },
                            "end": {
                                "line": 661,
                                "column": 78
                            }
                        }
                    ]
                },
                "24": {
                    "line": 661,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 661,
                                "column": 21
                            },
                            "end": {
                                "line": 661,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 661,
                                "column": 26
                            },
                            "end": {
                                "line": 661,
                                "column": 33
                            }
                        },
                        {
                            "start": {
                                "line": 661,
                                "column": 37
                            },
                            "end": {
                                "line": 661,
                                "column": 51
                            }
                        }
                    ]
                },
                "25": {
                    "line": 664,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 664,
                                "column": 8
                            },
                            "end": {
                                "line": 664,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 664,
                                "column": 8
                            },
                            "end": {
                                "line": 664,
                                "column": 8
                            }
                        }
                    ]
                },
                "26": {
                    "line": 665,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 665,
                                "column": 12
                            },
                            "end": {
                                "line": 665,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 665,
                                "column": 12
                            },
                            "end": {
                                "line": 665,
                                "column": 12
                            }
                        }
                    ]
                },
                "27": {
                    "line": 672,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 672,
                                "column": 12
                            },
                            "end": {
                                "line": 672,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 672,
                                "column": 12
                            },
                            "end": {
                                "line": 672,
                                "column": 12
                            }
                        }
                    ]
                },
                "28": {
                    "line": 699,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 699,
                                "column": 55
                            },
                            "end": {
                                "line": 699,
                                "column": 71
                            }
                        },
                        {
                            "start": {
                                "line": 699,
                                "column": 74
                            },
                            "end": {
                                "line": 699,
                                "column": 78
                            }
                        }
                    ]
                },
                "29": {
                    "line": 699,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 699,
                                "column": 21
                            },
                            "end": {
                                "line": 699,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 699,
                                "column": 26
                            },
                            "end": {
                                "line": 699,
                                "column": 33
                            }
                        },
                        {
                            "start": {
                                "line": 699,
                                "column": 37
                            },
                            "end": {
                                "line": 699,
                                "column": 51
                            }
                        }
                    ]
                },
                "30": {
                    "line": 702,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 702,
                                "column": 8
                            },
                            "end": {
                                "line": 702,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 702,
                                "column": 8
                            },
                            "end": {
                                "line": 702,
                                "column": 8
                            }
                        }
                    ]
                },
                "31": {
                    "line": 702,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 702,
                                "column": 11
                            },
                            "end": {
                                "line": 702,
                                "column": 15
                            }
                        },
                        {
                            "start": {
                                "line": 702,
                                "column": 19
                            },
                            "end": {
                                "line": 702,
                                "column": 35
                            }
                        }
                    ]
                },
                "32": {
                    "line": 759,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 759,
                                "column": 8
                            },
                            "end": {
                                "line": 759,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 759,
                                "column": 8
                            },
                            "end": {
                                "line": 759,
                                "column": 8
                            }
                        }
                    ]
                },
                "33": {
                    "line": 783,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 783,
                                "column": 8
                            },
                            "end": {
                                "line": 783,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 783,
                                "column": 8
                            },
                            "end": {
                                "line": 783,
                                "column": 8
                            }
                        }
                    ]
                },
                "34": {
                    "line": 795,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 795,
                                "column": 8
                            },
                            "end": {
                                "line": 795,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 795,
                                "column": 8
                            },
                            "end": {
                                "line": 795,
                                "column": 8
                            }
                        }
                    ]
                },
                "35": {
                    "line": 795,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 795,
                                "column": 13
                            },
                            "end": {
                                "line": 795,
                                "column": 29
                            }
                        },
                        {
                            "start": {
                                "line": 795,
                                "column": 33
                            },
                            "end": {
                                "line": 795,
                                "column": 46
                            }
                        },
                        {
                            "start": {
                                "line": 795,
                                "column": 50
                            },
                            "end": {
                                "line": 795,
                                "column": 75
                            }
                        }
                    ]
                },
                "36": {
                    "line": 799,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 799,
                                "column": 15
                            },
                            "end": {
                                "line": 799,
                                "column": 15
                            }
                        },
                        {
                            "start": {
                                "line": 799,
                                "column": 15
                            },
                            "end": {
                                "line": 799,
                                "column": 15
                            }
                        }
                    ]
                },
                "37": {
                    "line": 799,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 799,
                                "column": 20
                            },
                            "end": {
                                "line": 799,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 799,
                                "column": 39
                            },
                            "end": {
                                "line": 799,
                                "column": 53
                            }
                        },
                        {
                            "start": {
                                "line": 799,
                                "column": 57
                            },
                            "end": {
                                "line": 799,
                                "column": 82
                            }
                        }
                    ]
                },
                "38": {
                    "line": 819,
                    "type": "switch",
                    "locations": [
                        {
                            "start": {
                                "line": 823,
                                "column": 16
                            },
                            "end": {
                                "line": 832,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 835,
                                "column": 16
                            },
                            "end": {
                                "line": 844,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 847,
                                "column": 16
                            },
                            "end": {
                                "line": 848,
                                "column": 22
                            }
                        }
                    ]
                },
                "39": {
                    "line": 826,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 826,
                                "column": 16
                            },
                            "end": {
                                "line": 826,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 826,
                                "column": 16
                            },
                            "end": {
                                "line": 826,
                                "column": 16
                            }
                        }
                    ]
                },
                "40": {
                    "line": 838,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 838,
                                "column": 16
                            },
                            "end": {
                                "line": 838,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 838,
                                "column": 16
                            },
                            "end": {
                                "line": 838,
                                "column": 16
                            }
                        }
                    ]
                },
                "41": {
                    "line": 874,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 874,
                                "column": 8
                            },
                            "end": {
                                "line": 874,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 874,
                                "column": 8
                            },
                            "end": {
                                "line": 874,
                                "column": 8
                            }
                        }
                    ]
                },
                "42": {
                    "line": 874,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 874,
                                "column": 11
                            },
                            "end": {
                                "line": 874,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 874,
                                "column": 17
                            },
                            "end": {
                                "line": 874,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 874,
                                "column": 38
                            },
                            "end": {
                                "line": 874,
                                "column": 62
                            }
                        }
                    ]
                },
                "43": {
                    "line": 896,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 896,
                                "column": 27
                            },
                            "end": {
                                "line": 896,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 896,
                                "column": 38
                            },
                            "end": {
                                "line": 896,
                                "column": 42
                            }
                        }
                    ]
                },
                "44": {
                    "line": 897,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 897,
                                "column": 44
                            },
                            "end": {
                                "line": 897,
                                "column": 64
                            }
                        },
                        {
                            "start": {
                                "line": 897,
                                "column": 67
                            },
                            "end": {
                                "line": 897,
                                "column": 71
                            }
                        }
                    ]
                },
                "45": {
                    "line": 899,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 899,
                                "column": 8
                            },
                            "end": {
                                "line": 899,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 899,
                                "column": 8
                            },
                            "end": {
                                "line": 899,
                                "column": 8
                            }
                        }
                    ]
                },
                "46": {
                    "line": 932,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 932,
                                "column": 27
                            },
                            "end": {
                                "line": 932,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 932,
                                "column": 38
                            },
                            "end": {
                                "line": 932,
                                "column": 42
                            }
                        }
                    ]
                },
                "47": {
                    "line": 933,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 933,
                                "column": 46
                            },
                            "end": {
                                "line": 933,
                                "column": 66
                            }
                        },
                        {
                            "start": {
                                "line": 933,
                                "column": 69
                            },
                            "end": {
                                "line": 933,
                                "column": 73
                            }
                        }
                    ]
                },
                "48": {
                    "line": 935,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 935,
                                "column": 8
                            },
                            "end": {
                                "line": 935,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 935,
                                "column": 8
                            },
                            "end": {
                                "line": 935,
                                "column": 8
                            }
                        }
                    ]
                },
                "49": {
                    "line": 973,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 973,
                                "column": 8
                            },
                            "end": {
                                "line": 973,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 973,
                                "column": 8
                            },
                            "end": {
                                "line": 973,
                                "column": 8
                            }
                        }
                    ]
                },
                "50": {
                    "line": 977,
                    "type": "switch",
                    "locations": [
                        {
                            "start": {
                                "line": 980,
                                "column": 12
                            },
                            "end": {
                                "line": 980,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 981,
                                "column": 16
                            },
                            "end": {
                                "line": 982,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 985,
                                "column": 16
                            },
                            "end": {
                                "line": 985,
                                "column": 46
                            }
                        }
                    ]
                },
                "51": {
                    "line": 1007,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1007,
                                "column": 50
                            },
                            "end": {
                                "line": 1007,
                                "column": 60
                            }
                        },
                        {
                            "start": {
                                "line": 1007,
                                "column": 63
                            },
                            "end": {
                                "line": 1007,
                                "column": 64
                            }
                        }
                    ]
                },
                "52": {
                    "line": 1008,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1008,
                                "column": 36
                            },
                            "end": {
                                "line": 1008,
                                "column": 70
                            }
                        },
                        {
                            "start": {
                                "line": 1008,
                                "column": 74
                            },
                            "end": {
                                "line": 1008,
                                "column": 78
                            }
                        }
                    ]
                },
                "53": {
                    "line": 1009,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1009,
                                "column": 101
                            },
                            "end": {
                                "line": 1009,
                                "column": 125
                            }
                        },
                        {
                            "start": {
                                "line": 1009,
                                "column": 127
                            },
                            "end": {
                                "line": 1009,
                                "column": 131
                            }
                        }
                    ]
                },
                "54": {
                    "line": 1009,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1009,
                                "column": 29
                            },
                            "end": {
                                "line": 1009,
                                "column": 42
                            }
                        },
                        {
                            "start": {
                                "line": 1009,
                                "column": 46
                            },
                            "end": {
                                "line": 1009,
                                "column": 55
                            }
                        },
                        {
                            "start": {
                                "line": 1009,
                                "column": 59
                            },
                            "end": {
                                "line": 1009,
                                "column": 97
                            }
                        }
                    ]
                },
                "55": {
                    "line": 1013,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1013,
                                "column": 8
                            },
                            "end": {
                                "line": 1013,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1013,
                                "column": 8
                            },
                            "end": {
                                "line": 1013,
                                "column": 8
                            }
                        }
                    ]
                },
                "56": {
                    "line": 1014,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1014,
                                "column": 12
                            },
                            "end": {
                                "line": 1014,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 1014,
                                "column": 12
                            },
                            "end": {
                                "line": 1014,
                                "column": 12
                            }
                        }
                    ]
                },
                "57": {
                    "line": 1014,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1014,
                                "column": 17
                            },
                            "end": {
                                "line": 1014,
                                "column": 30
                            }
                        },
                        {
                            "start": {
                                "line": 1014,
                                "column": 34
                            },
                            "end": {
                                "line": 1014,
                                "column": 56
                            }
                        }
                    ]
                },
                "58": {
                    "line": 1017,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1017,
                                "column": 16
                            },
                            "end": {
                                "line": 1017,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 1017,
                                "column": 16
                            },
                            "end": {
                                "line": 1017,
                                "column": 16
                            }
                        }
                    ]
                },
                "59": {
                    "line": 1080,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1080,
                                "column": 22
                            },
                            "end": {
                                "line": 1080,
                                "column": 31
                            }
                        },
                        {
                            "start": {
                                "line": 1080,
                                "column": 35
                            },
                            "end": {
                                "line": 1080,
                                "column": 36
                            }
                        }
                    ]
                },
                "60": {
                    "line": 1093,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1093,
                                "column": 8
                            },
                            "end": {
                                "line": 1093,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1093,
                                "column": 8
                            },
                            "end": {
                                "line": 1093,
                                "column": 8
                            }
                        }
                    ]
                },
                "61": {
                    "line": 1117,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1117,
                                "column": 8
                            },
                            "end": {
                                "line": 1117,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1117,
                                "column": 8
                            },
                            "end": {
                                "line": 1117,
                                "column": 8
                            }
                        }
                    ]
                },
                "62": {
                    "line": 1150,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1150,
                                "column": 20
                            },
                            "end": {
                                "line": 1150,
                                "column": 51
                            }
                        },
                        {
                            "start": {
                                "line": 1150,
                                "column": 55
                            },
                            "end": {
                                "line": 1150,
                                "column": 57
                            }
                        }
                    ]
                },
                "63": {
                    "line": 1153,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1153,
                                "column": 16
                            },
                            "end": {
                                "line": 1153,
                                "column": 19
                            }
                        },
                        {
                            "start": {
                                "line": 1153,
                                "column": 23
                            },
                            "end": {
                                "line": 1153,
                                "column": 27
                            }
                        }
                    ]
                },
                "64": {
                    "line": 1155,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1155,
                                "column": 8
                            },
                            "end": {
                                "line": 1155,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1155,
                                "column": 8
                            },
                            "end": {
                                "line": 1155,
                                "column": 8
                            }
                        }
                    ]
                },
                "65": {
                    "line": 1155,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1155,
                                "column": 13
                            },
                            "end": {
                                "line": 1155,
                                "column": 18
                            }
                        },
                        {
                            "start": {
                                "line": 1155,
                                "column": 22
                            },
                            "end": {
                                "line": 1155,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 1155,
                                "column": 38
                            },
                            "end": {
                                "line": 1155,
                                "column": 52
                            }
                        }
                    ]
                },
                "66": {
                    "line": 1159,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1159,
                                "column": 8
                            },
                            "end": {
                                "line": 1159,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1159,
                                "column": 8
                            },
                            "end": {
                                "line": 1159,
                                "column": 8
                            }
                        }
                    ]
                },
                "67": {
                    "line": 1159,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1159,
                                "column": 13
                            },
                            "end": {
                                "line": 1159,
                                "column": 18
                            }
                        },
                        {
                            "start": {
                                "line": 1159,
                                "column": 22
                            },
                            "end": {
                                "line": 1159,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 1159,
                                "column": 38
                            },
                            "end": {
                                "line": 1159,
                                "column": 54
                            }
                        }
                    ]
                },
                "68": {
                    "line": 1206,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1206,
                                "column": 8
                            },
                            "end": {
                                "line": 1206,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1206,
                                "column": 8
                            },
                            "end": {
                                "line": 1206,
                                "column": 8
                            }
                        }
                    ]
                },
                "69": {
                    "line": 1206,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1206,
                                "column": 13
                            },
                            "end": {
                                "line": 1206,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 1206,
                                "column": 46
                            },
                            "end": {
                                "line": 1206,
                                "column": 65
                            }
                        }
                    ]
                },
                "70": {
                    "line": 1221,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1221,
                                "column": 8
                            },
                            "end": {
                                "line": 1221,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1221,
                                "column": 8
                            },
                            "end": {
                                "line": 1221,
                                "column": 8
                            }
                        }
                    ]
                },
                "71": {
                    "line": 1224,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1224,
                                "column": 36
                            },
                            "end": {
                                "line": 1224,
                                "column": 141
                            }
                        },
                        {
                            "start": {
                                "line": 1224,
                                "column": 144
                            },
                            "end": {
                                "line": 1224,
                                "column": 146
                            }
                        }
                    ]
                },
                "72": {
                    "line": 1238,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1238,
                                "column": 8
                            },
                            "end": {
                                "line": 1238,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1238,
                                "column": 8
                            },
                            "end": {
                                "line": 1238,
                                "column": 8
                            }
                        }
                    ]
                },
                "73": {
                    "line": 1242,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1242,
                                "column": 8
                            },
                            "end": {
                                "line": 1242,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1242,
                                "column": 8
                            },
                            "end": {
                                "line": 1242,
                                "column": 8
                            }
                        }
                    ]
                },
                "74": {
                    "line": 1246,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1246,
                                "column": 8
                            },
                            "end": {
                                "line": 1246,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1246,
                                "column": 8
                            },
                            "end": {
                                "line": 1246,
                                "column": 8
                            }
                        }
                    ]
                },
                "75": {
                    "line": 1250,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1250,
                                "column": 8
                            },
                            "end": {
                                "line": 1250,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1250,
                                "column": 8
                            },
                            "end": {
                                "line": 1250,
                                "column": 8
                            }
                        }
                    ]
                },
                "76": {
                    "line": 1267,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1267,
                                "column": 8
                            },
                            "end": {
                                "line": 1267,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1267,
                                "column": 8
                            },
                            "end": {
                                "line": 1267,
                                "column": 8
                            }
                        }
                    ]
                },
                "77": {
                    "line": 1285,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1285,
                                "column": 8
                            },
                            "end": {
                                "line": 1285,
                                "column": 8
                            }
                        },
                        {
                            "start": {
                                "line": 1285,
                                "column": 8
                            },
                            "end": {
                                "line": 1285,
                                "column": 8
                            }
                        }
                    ]
                }
            },
            "code": [
                "(function () { YUI.add('gallery-datatable-paginator', function (Y, NAME) {",
                "",
                "/**",
                " Defines a Y.DataTable class extension to add capability to support a Paginator View-Model and allow",
                " paging of actively displayed data within the DT instance.",
                "",
                " Works with either client-side pagination (i.e. local data, usually in form of JS Array) or",
                " in conjunction with remote server-side pagination, via either DataSource or ModelSync.REST.",
                "",
                " Allows for dealing with sorted data, wherein the local data is sorted in place, and in the case of remote data the \"sortBy\"",
                " attribute is passed to the remote server.",
                "",
                " <h4>Usage</h4>",
                "",
                "     var dtable = new Y.DataTable({",
                "         columns:    [ 'firstName','lastName','state','age', 'grade' ],",
                "         data:       enrollment.records,",
                "         scrollable: 'y',",
                "         height:     '450px',",
                "         sortBy:     [{lastName:'asc'}, {grade:-1}],",
                "         paginator:  new PaginatorView({",
                "            model:      new PaginatorModel({itemsPerPage:50, page:3}),",
                "            container:  '#pagContA'",
                "         }),",
                "         resizePaginator: true",
                "     });",
                "",
                " <h4>Client OR Server Pagination</h4>",
                "",
                " Pagination can either be done solely on the \"client\", or from a remote \"server\".  The attribute [paginationSource](#attr_paginationSource)",
                " is set to either of these strings.  The trivial case is where the data is coming locally (i.e. in a JS array) and the user requests",
                " \"client\" pagination.  Likewise when pagination occurs solely on a remote device, \"server\" is very straightforward.  This module also",
                " provides a middle-path where the initial payload is obtained from a remote source, and then after loading, pagination is to be done",
                " on the \"client\" (see below).",
                "",
                " A determination of whether the source of `data` is either \"local\" data (i.e. a Javascript Array or Y.ModelList), or is",
                " provided from a server (either DataSource or ModelSync.REST) is performed within the method [_afterDataReset](#method__afterDataReset).",
                "",
                " For server-side pagination, the OUTGOING request must include (as a minimum);  `page` and `itemsPerPage` querystring",
                " parameters (all others, including `sortBy` are optional).  Likewise, the INCOMING (returned response) must include as \"meta-data\" at",
                " least `totalItems`, plus any other PaginatorModel attributes.   The key item within the returned response is `totalItems'. If the returned",
                " response does not contain `totalItems` metadata <b>the PaginatorView will not be shown!</b>.",
                "",
                " We have provided an attribute [serverPaginationMap](#attr_serverPaginationMap) as an object hash to translate both outgoing",
                " querystring parameter names and incoming (response returned) parameter names in order to match what is expected by the",
                " PaginatorModel.  Please see this attribute or the examples for how to utilize this map for your use case.",
                "",
                " <h4>Loading the \"data\" For a Page</h4>",
                " Once the \"source of data\" is known, the method [processPageRequest](#method_processPageRequest) fires on a `pageChange`.",
                "",
                " For the case of \"client\" pagination, an internal buffer [_mlistArray](#property__mlistArray) is set to hold all of the data.",
                " Each page request in this circumstance involves using simply Array slicing methods from the buffer.",
                " (See method [paginatorLocalRequest](#method_paginatorLocalRequest) for details)",
                "",
                " The case of \"remote data\" (from a server) is actually more straightforward.  For the case of ModelSync.REST remote data the",
                " current \"pagination state\" is processed through the [serverPaginationMap](#attr_serverPaginationMap) hash (to convert to",
                " queryString format) and the ModelList.load() method is called.  For the case of a DataSource, a similar approach is used where",
                " the [requestStringTemplate](#attr_requestStringTemplate) is read, processed through the serverPaginationMap hash and a",
                " datasource.load() request is fired.",
                " (See methods [paginatorMLRequest](#method_paginatorMLRequest) and [paginatorDSRequest](#method_paginatorDSRequest)for details)",
                "",
                " This extension DOES NOT \"cache\" pages for remote data, it simply inserts the full returned data into the DT.  So as a consequence,",
                " a pagination state change for remote data involves a simple request sent to the server source (either DataSource or ModelSync.REST)",
                " and the response results are loaded in the DT as in any other \"response\".",
                "",
                " <h4>Loading the \"initial data\" remotely - then using \"client\" Pagination</h4>",
                "",
                " A recent revision to this module now allows for the initial payload of data that constitutes the entire \"dataset\" to be loaded",
                " from a remote source (by the standard DataSource or ModelSync.REST methods).",
                "",
                " By setting the [paginationSource](#attr_paginationSource) attribute to \"client\", this module proceeds with paginating the DataTable",
                " as if the data was initially set within the \"data\" property.",
                "",
                " <h4>Sorting</h4>",
                "",
                " This module supports sorting for both client and server side Pagination.  Note that sorting for \"server-side\" is required to be",
                " accomplished by the remote server; the \"sortBy\" settings are passed in a remote page request.",
                "",
                " For client-side Pagination the task is a more complex.  We utilize an internal buffer to store the client-side data, so therefore",
                " the requested \"sorting\" is accomplished internally within method [paginatorSortLocalData](#method_paginatorSortLocalData).",
                " Basic \"client-side\" sorting is supported in this method (limited to one sort key at a time).",
                " Implementers may override this method for more complex sorting needs.",
                "",
                " @module gallery-datatable-paginator",
                " @class Y.DataTable.Paginator",
                " @extends DataTable",
                " @since 3.6.0",
                " **/",
                "function DtPaginator() {}",
                "",
                "",
                "DtPaginator.ATTRS = {",
                "",
                "    /**",
                "     * Adds a paginator view (specifically Y.PaginatorView) instance to the DataTable.",
                "     *",
                "     * @attribute paginator",
                "     * @type Y.View",
                "     * @default null",
                "     */",
                "    paginator:  {",
                "        value : null,",
                "        setter: '_setPaginator'",
                "    },",
                "",
                "    /**",
                "     * Defines a hash to convert expected PaginatorModel attributes to outgoing request queryString",
                "     * or returned (incoming response) meta data back to PaginatorModel attributes.",
                "     *",
                "     * @example",
                "     *          serverPaginationMap : {",
                "     *              totalItems :    'totalRows',",
                "     *              page :          {toServer:'requestedPage', fromServer:'returnedPageNo'},",
                "     *              itemIndexStart: 'startRecord',",
                "     *              itemsPerPage:   'numPageRows'",
                "     *          }",
                "     *",
                "     *          // would map to an outgoing request of (for url:/data/orders) ;",
                "     *          /data/orders/{cust_no}?requestedPage={requestedPage}&numPageRows={numPageRows}",
                "     *",
                "     *          // for a JSON response of ...",
                "     *          { \"reply\":\"ok\", \"totalRows\":478, \"returnedPageNo\":17, \"startRecord\":340, \"numPageRows\":20,",
                "     *            \"results\":[ {...} 20 total rows returned {...}] }",
                "     *",
                "     * For default value, see [_defPagMap](#method__defPagMap)",
                "     *",
                "     * @attribute serverPaginationMap",
                "     * @type {Object}",
                "     * @default",
                "     */",
                "    serverPaginationMap:{",
                "        valueFn:    '_defPagMap',",
                "        setter:     '_setPagMap',",
                "        validator:  Y.Lang.isObject",
                "    },",
                "",
                "    /**",
                "     * Attribute to track the full pagination state (i.e. the PaginatorModel) attributes all in one object.",
                "     * Also includes the `sortBy` property internally.",
                "     *",
                "     * @attribute paginationState",
                "     * @type Object",
                "     * @default unset",
                "     * @beta",
                "     */",
                "    paginationState: {",
                "        valueFn: null, //'_defPagState',",
                "        setter:  '_setPagState',",
                "        getter:  '_getPagState'",
                "    },",
                "",
                "    /**",
                "     * (SERVER DataSource only!)",
                "     * Includes the request queryString for a DataSource request (only!), which contains the pagination",
                "     * replacement strings to be appended to the DataSource's \"source\" string.",
                "     *",
                "     * @example",
                "     *          requestStringTemplate:  \"?currentPage={page}&pageRows={itemsPerPage}&sorting={sortBy}\"",
                "     *",
                "     * Note, the replacement parameters within this template should match the settings from the PaginatorModel",
                "     * attributes.",
                "     *",
                "     * In cases where your server expects differing query parameters, you can utilize ATTR [serverPaginationMap](#attr_serverPaginationMap).",
                "     *",
                "     * @attribute requestStringTemplate",
                "     * @type String",
                "     * @default \"\"",
                "     */",
                "    requestStringTemplate: {",
                "        value:      \"\",",
                "        validator:  Y.Lang.isString",
                "    },",
                "",
                "    /**",
                "     * Flag to indicate if the Paginator container should be re-sized to the DataTable size",
                "     * after rendering is complete.",
                "     *",
                "     * This attribute works best with a \"bar\" type of Paginator that is intended to look integral with a DataTable.",
                "     *",
                "     * @attribute paginatorResize",
                "     * @type Boolean",
                "     * @default false",
                "     */",
                "    paginatorResize: {",
                "        value:      false,",
                "        validator:  Y.Lang.isBoolean",
                "    },",
                "",
                "    /**",
                "     *  A flag to indicate if client-side pagination or server-side pagination is desired.",
                "     *  Specifically, this attribute determines whether Page Requests are sent remotely or are",
                "     *  handled internally.",
                "     *",
                "     *  Recognized settings are \"client\" (the default) or \"server\".",
                "     *",
                "     *  Note: In cases where the initial payload of data is obtained from a DS or ModelSyncREST",
                "     *  server, but after data is received the user desires \"client-side\" pagination, this would",
                "     *  be set to \"client\".",
                "     *",
                "     * @attribute paginationSource",
                "     * @type String",
                "     * @default 'client'",
                "     */",
                "    paginationSource: {",
                "        value:      'client',",
                "        validator:  Y.Lang.isString",
                "    }",
                "",
                "};",
                "",
                "",
                "Y.mix( DtPaginator.prototype, {",
                "    /**",
                "     * Holder for the \"original\" un-paged data that the DataTable was based upon.",
                "     *",
                "     * This property is stored as an Array, from the original \"data\" ModelList, only used",
                "     * for case of \"local\" data, is sliced as needed to re-set each data Page.",
                "     *",
                "     * Populated in method [_afterDataReset](#method__afterDataReset)",
                "     *",
                "     * @property _mlistArray",
                "     * @type Array",
                "     * @default null",
                "     * @static",
                "     * @since 3.6.0",
                "     * @protected",
                "     */",
                "    _mlistArray: null,",
                "",
                "",
                "    /**",
                "     * Placeholder for a text flag indicating the original provider of \"data\" for this DataTable,",
                "     *  this is set initially in method _afterDataReset.",
                "     *",
                "     * Set to either 'local', 'ds' or 'mlist' in method [_afterDataReset](#method__afterDataReset)",
                "     *",
                "     * Populated in _afterDataReset.  Utilized in processPageRequest",
                "     *",
                "     * @property _pagDataSrc",
                "     * @type String",
                "     * @default null",
                "     * @static",
                "     * @since 3.6.0",
                "     * @protected",
                "     */",
                "    _pagDataSrc: null,",
                "",
                "    /**",
                "     * Array to hold Event handles to allow for cleanup in the destructor",
                "     * @property _evtHandlesPag",
                "     * @type Array",
                "     * @default null",
                "     * @static",
                "     * @protected",
                "     */",
                "    _evtHandlesPag: null,",
                "",
                "    /**",
                "     * A convenience property holder for the DataTable's \"paginator\" attribute (the Paginator-View instance).",
                "     *",
                "     * @property paginator",
                "     * @type {Y.PaginatorView|View}",
                "     * @default null",
                "     * @public",
                "     * @since 3.6.0",
                "     */",
                "    paginator: null,",
                "",
                "    /**",
                "     * A convenience property holder for the Paginator-View's Model attribute.",
                "     * @property pagModel",
                "     * @type {Y.PaginatorModel|Model}",
                "     * @default null",
                "     * @public",
                "     * @since 3.6.0",
                "     */",
                "    pagModel: null,",
                "",
                "    /*----------------------------------------------------------------------------------------------------------*/",
                "    /*                  L I F E - C Y C L E    M E T H O D S                                                    */",
                "    /*----------------------------------------------------------------------------------------------------------*/",
                "",
                "    /**",
                "     * This initializer sets up the listeners related to the original DataTable instance, to the",
                "     *  PaginatorModel changes and related to the underlying \"data\" attribute the DT is based upon.",
                "     *",
                "     * @method initializer",
                "     * @protected",
                "     * @return this",
                "     * @chainable",
                "     */",
                "    initializer: function(){",
                "        //",
                "        // Setup listeners on PaginatorModel and DT changes ...",
                "        //   Only do these if the \"paginator\" ATTR is set",
                "        //",
                "        if ( this.get('paginator') ) {",
                "",
                "            this.paginator = this.get('paginator');",
                "            this._evtHandlesPag = [];",
                "",
                "            // If PaginatorModel exists, set listeners for \"change\" events ...",
                "            if ( this.paginator.get('model') ) {",
                "                this.pagModel = this.get('paginator').get('model');",
                "                this._evtHandlesPag.push( this.pagModel.after('pageChange', Y.bind(this._pageChangeListener,this) ) );",
                "                this._evtHandlesPag.push( this.pagModel.after('itemsPerPageChange', Y.bind(this._pageChangeListener,this)) );",
                "                this._evtHandlesPag.push( this.pagModel.after('totalItemsChange', Y.bind(this._totalItemsListener,this)) );",
                "            }",
                "",
                "            // Define listeners to the \"data\" change events ....",
                "            this._evtHandlesPag.push( this.data.after(\"reset\", Y.bind(this._afterDataReset,this)) );",
                "            this._evtHandlesPag.push( this.data.after(\"add\", Y.bind(this._afterDataAdd,this)) );",
                "            this._evtHandlesPag.push( this.data.after(\"remove\", Y.bind(this._afterDataRemove,this)) );",
                "",
                "            // Added listener to sniff for DataSource existence, for its binding",
                "            this._evtHandlesPag.push( Y.Do.after( this._afterSyncUI, this, '_syncUI', this) );",
                "",
                "            // Add listener for \"sort\" events on DataTable ...",
                "            this._evtHandlesPag.push( this.after('sort', this._afterSortPaginator) );",
                "",
                "            // Try to determine when DT is finished rendering records, this is hacky .. but seems to work",
                "            this._evtHandlesPag.push( this.after( 'renderView', this._notifyRender) );",
                "",
                "        }",
                "",
                "",
                "        return this;",
                "    },",
                "",
                "    /**",
                "     * Destructor to clean up listener event handlers and the internal storage buffer.",
                "     *",
                "     * @method destructor",
                "     * @protected",
                "     */",
                "    destructor: function () {",
                "",
                "        // Clear up the listeners that were defined ...",
                "",
                "        Y.Array.each( this._evtHandlesPag,function(item){",
                "            if (!item) {",
                "                return;",
                "            }",
                "",
                "            if(Y.Lang.isArray(item)) {",
                "                Y.Array.each(item,function(si){",
                "                    si.detach();",
                "                });",
                "            } else {",
                "                item.detach();",
                "            }",
                "",
                "        });",
                "",
                "        // and clean-up the Arrays created",
                "        this._mlistArray = null;",
                "        this._evtHandlesPag = null;",
                "",
                "        // And delete the static properties set",
                "        delete this.pagModel;",
                "        delete this.paginator;",
                "",
                "    },",
                "",
                "    /*----------------------------------------------------------------------------------------------------------*/",
                "    /*                  P U B L I C      M E T H O D S                                                          */",
                "    /*----------------------------------------------------------------------------------------------------------*/",
                "",
                "    /**",
                "     *  Primary workhorse method that is fired when the Paginator \"page\" changes,",
                "     *  and returns a new subset of data for the DT (local data)",
                "     *  or sends a new request to a remote source to populate the DT (remote data)",
                "     *",
                "     *  @method processPageRequest",
                "     *  @param  {Integer} page_no Current page number to change to",
                "     *  @param  {Object} pag_state Pagination state object (this is NOT populated in local .. non-server type pagination) including;",
                "     *      @param {Integer} pag_state.indexStart Starting index returned from server response",
                "     *      @param {Integer} pag_state.numRecs Count of records returned from the response",
                "     *  @public",
                "     *  @return nothing",
                "     */",
                "    processPageRequest: function(page_no, pag_state) {",
                "        var rdata = this._mlistArray,",
                "            pagv  = this.get('paginator'),",
                "            pagm  = pagv.get('model'),",
                "            rpp   = pagm.get('itemsPerPage'),",
                "            sortby= this.get('sortBy') || {},",
                "            istart, iend, url_obj, prop_istart, prop_ipp, prop_iend, prop_page, rqst_str;",
                "        //",
                "        //  Get paginator indices",
                "        //",
                "        if ( pag_state ) {",
                "            istart = pag_state.itemIndexStart;",
                "            iend   = pag_state.itemIndexEnd || istart + rpp;",
                "        } else {",
                "            // usually here on first pass thru, when paginator initiates ...",
                "            istart = ( page_no - 1 ) * rpp;",
                "            iend = istart + rpp - 1;",
                "            iend = ( rdata && iend > rdata.length ) ? rdata.length : iend;",
                "        }",
                "",
                "        //",
                "        //  Store the translated replacement object for the request converted",
                "        //  from `serverPaginationMap` (or defaults if none) to a \"normalized\" format",
                "        //",
                "",
                "        url_obj     = {},",
                "        prop_istart = this._srvPagMapObj('itemIndexStart'),",
                "        prop_ipp    = this._srvPagMapObj('itemsPerPage');",
                "        prop_page   = this._srvPagMapObj('page');",
                "        prop_iend   = this._srvPagMapObj('itemIndexEnd');",
                "",
                "        url_obj[prop_page]   = page_no;      // page",
                "        url_obj[prop_istart] = istart;      // itemIndexStart",
                "        url_obj[prop_iend]   = iend;        // itemIndexEnd",
                "        url_obj[prop_ipp]    = rpp;         // itemsPerPage",
                "        url_obj.sortBy       = Y.JSON.stringify( sortby );",
                "",
                "        // mix-in the model ATTRS with the url_obj",
                "        url_obj = Y.merge(this.get('paginationState'), url_obj);",
                "",
                "        //",
                "        //  This is the main guts of retrieving the records,",
                "        //    we already figured out if this was 'local' or 'server' based.",
                "        //",
                "        //   Now, process this page request thru either local data array slicing or",
                "        //    simply firing off a remote server request ...",
                "        //",
                "        switch(this._pagDataSrc) {",
                "",
                "            case 'ds':",
                "",
                "                // fire off a request to DataSource, mixing in as the request string",
                "                //  with ATTR `requestStringTemplate` with the \"url_obj\" map",
                "",
                "                rqst_str = this.get('requestStringTemplate') || '';",
                "                this.paginatorDSRequest( Y.Lang.sub(rqst_str,url_obj) );",
                "",
                "                break;",
                "",
                "            case 'mlist':",
                "",
                "                // fire off a ModelSync.REST load \"read\" request, note that it mixes",
                "                //   the ModelList ATTRS with 'url_obj' in creating the request",
                "",
                "                this.paginatorMLRequest(url_obj);",
                "",
                "                break;",
                "",
                "            case 'local':",
                "",
                "                //this.paginatorLocalRequest(page_no,istart,iend);",
                "                this.paginatorLocalRequest(url_obj);",
                "",
                "",
                "        }",
                "",
                "        this.resizePaginator();",
                "        this.fire('pageUpdate',{ state:pag_state, view:pagv, urlObj: url_obj });",
                "    },",
                "",
                "    /**",
                "     * Fires after the DataTable-Paginator updates the page data and/or sends the remote request for more data",
                "     * @event pageUpdate",
                "     * @param {Object} pagStatus containing following;",
                "     *  @param {Object} pagStatus.pag_state Of Paginator Model `getAttrs()` as an Object",
                "     *  @param {View} pagStatus.view Instance of the Paginator View",
                "     */",
                "",
                "    /**",
                "     * Utility method that fires a request for the currently active page, effectively",
                "     * \"refreshing\" the Paginator UI",
                "     *",
                "     * @method refreshPaginator",
                "     * @public",
                "     */",
                "    refreshPaginator: function() {",
                "        this.processPageRequest(this.pagModel.get('page'));",
                "    },",
                "",
                "    /**",
                "     * Overrideable method to send the Pagination request to the ModelList for the \"load\" request.",
                "     * The default method simply passes the url_object (created/populated within method [processPageRequest](#method_processPageRequest))",
                "     * to the ModelList's \"load\" method (assuming ModelSync.REST or other handling is provided).",
                "     *",
                "     * Implementers are free to override this method to incorporate their own remote request.",
                "     *",
                "     * @method paginatorMLRequest",
                "     * @param {Object} url_object The pagination URL request object passed to the ModelList's sync layer",
                "     * @public",
                "     */",
                "    paginatorMLRequest: function(url_object){",
                "        this.data.load(url_object);",
                "    },",
                "",
                "    /**",
                "     * Overrideable method to send the Pagination request to the DataSource.",
                "     * By default the constructed `requestString` is sent, but implementers can override this method to",
                "     * include additional information in their remote request.",
                "     *",
                "     * @method paginatorDSRequest",
                "     * @param {String} requestString DataSource remote request string sent via DataTable.datasource load method",
                "     * @public",
                "     */",
                "    paginatorDSRequest: function(requestString) {",
                "        this.datasource.load({",
                "            request: requestString",
                "        });",
                "    },",
                "",
                "    /**",
                "     * Overrideable method to handle a Pagination request when using \"local\" data.  This method",
                "     * takes care of slicing and resetting the \"local data\" array and re-syncing the DataTable.",
                "     *",
                "     * @method paginatorLocalRequest",
                "     * @param {Object} url_obj",
                "     *  @param {Number} itemIndexStart Calculated ending index for this page number",
                "     *  @param {Number} itemIndexEnd Calculated ending index for this page number",
                "     * @public",
                "     */",
                "    paginatorLocalRequest: function(url_obj) {",
                "        var istart = url_obj.itemIndexStart,",
                "            iend   = url_obj.itemIndexEnd,",
                "            rdata = this._mlistArray || [],",
                "            data_new;",
                "",
                "        data_new = rdata.slice(istart,iend+1);",
                "        this.data.reset( data_new, {silent:true} );",
                "        this.syncUI();",
                "    },",
                "",
                "",
                "    /**",
                "     * Method to sync the container for the paginator View with the underlying DataTable",
                "     *  'table' element.",
                "     *",
                "     *  Unfortunately, there isn't a distinct, definitive 'render' complete event due to",
                "     *   DT's complex rendering, so I use a timer function to attempt a resize.",
                "     *",
                "     * @method resizePaginator",
                "     * @public",
                "     */",
                "    resizePaginator: function() {",
                "        if ( this.get('paginatorResize') !== true )  {",
                "            return;",
                "        }",
                "",
                "        //TODO:  this is a total HACK, should figure a better way than Y.later ...",
                "        Y.later( 25, this, function(){ this._syncPaginatorSize(); } );",
                "    },",
                "",
                "    /**",
                "     *  Method to re-initialize the original entire dataset when used with \"client\" pagination.",
                "     *",
                "     * @method resetLocalData",
                "     * @param {Array|ModelList} data Data to be reset to ... either as a JS Array or a Y.ModelList",
                "     * @public",
                "     * @return this",
                "     * @chainable",
                "     */",
                "    resetLocalData: function(data){",
                "        if ( data instanceof Y.ModelList ) {",
                "            this._mlistArray = [];",
                "            data.each(function(model){",
                "                this._mlistArray.push( model.toJSON() );",
                "            },this);",
                "        } else if (Y.Lang.isArray(data) ) {",
                "            this._mlistArray = [].concat(data);",
                "        }",
                "        this.pagModel.set('totalItems', this._mlistArray.length );",
                "        this.refreshPaginator();",
                "        return this;",
                "    },",
                "",
                "    /**",
                "     * Method that sorts the buffered local data (in _mlistArray) after a DataTable",
                "     * sort event is fired.",
                "     *",
                "     * TODO: ONLY WORKS FOR single column sort presently and for \"known\" sorting",
                "     * methods (i.e. string, number, date)",
                "     *",
                "     * Implementers can override this method to incorporate more advanced sorting",
                "     *",
                "     * @method paginatorSortLocalData",
                "     * @public",
                "     */",
                "    paginatorSortLocalData: function(){",
                "        var rdata  = [], //this._mlistArray,",
                "            sortBy = this.get('sortBy'),",
                "            sortObj,sortKey,sortDir;",
                "",
                "        if(Y.Lang.isArray(sortBy)) {",
                "",
                "            Y.Array.each(this._mlistArray, function(r){ rdata.push(r); });",
                "",
                "            sortObj = sortBy[0],",
                "            sortKey = Y.Object.keys(sortObj)[0],",
                "            sortDir = sortObj[sortKey];",
                "",
                "        //",
                "        //  Server-based sorting, sort prior to sending response back",
                "        //  (supports String, Number and Date sorting ...)",
                "        //",
                "            rdata.sort(function(a,b){",
                "                var rtn,atime,btime;",
                "                if(Y.Lang.isString(a[sortKey])) {",
                "",
                "                    rtn = ( a[sortKey]<b[sortKey] ) ? -sortDir : sortDir;",
                "",
                "                } else if(Y.Lang.isNumber(a[sortKey])){",
                "",
                "                    rtn = (a[sortKey]-b[sortKey]<0) ? -sortDir : sortDir;",
                "",
                "                } else if(Y.Lang.isDate(a[sortKey]) ){",
                "",
                "                    //rtn = ((a[sortKey].getTime() - b[sortKey].getTime())<0) ? -sortDir : sortDir;",
                "                    atime = a[sortKey], //.getTime(),",
                "                    btime = b[sortKey]; //.getTime();",
                "                    rtn = (sortDir === -1) ? (btime - atime) : (atime - btime);",
                "",
                "                }",
                "                return rtn;",
                "",
                "            });",
                "",
                "            this._mlistArray = rdata;",
                "",
                "        }",
                "",
                "        this.refreshPaginator();",
                "",
                "    },",
                "",
                "",
                "    /**",
                "     * Method to return the entire internal buffer array used for client-side pagination.",
                "     * Note: This only applies to client-side pagination",
                "     *",
                "     * @method getLocalData",
                "     * @return {Array} data Array of internal buffer used for client-side pagination",
                "     * @public",
                "     */",
                "    getLocalData: function() {",
                "        return this._mlistArray;",
                "    },",
                "",
                "    /**",
                "     * Helper method that responds to DT's \"data:add\" event (via .addRow/addRows), by adding",
                "     * the new record (in o.newVal) to the internal buffer and refreshing the Paginator UI.",
                "     *",
                "     * NOTE: This only applies to FOR LOCAL DATA ONLY, for client-side pagination",
                "     *",
                "     * Implementers are welcome to override this method with their own !!",
                "     *",
                "     * @method addLocalData",
                "     * @param {Object} o Event object from the ModelList.add event",
                "     * @param {Number} pgIndex Calculated absolute index of the record within the entire dataset",
                "     * @public",
                "     */",
                "    addLocalData: function(o,pgIndex) {",
                "        var data  = (o && o.model && o.model.toJSON) ? o.model.toJSON() : null,",
                "            mdata, newData, first, second;",
                "",
                "        if (data) {",
                "            if(data.id) {",
                "                delete data.id;",
                "            }",
                "",
                "            mdata = this._mlistArray;",
                "            newData = [];",
                "",
                "            if(pgIndex === 0){",
                "                newData = newData.concat(data,mdata);",
                "            } else {",
                "                first = mdata.slice(0,pgIndex);",
                "                second = mdata.slice(pgIndex);",
                "                newData = newData.concat(first,data,second);",
                "            }",
                "",
                "            this.resetLocalData(newData);",
                "        }",
                "",
                "    },",
                "",
                "    /**",
                "     * Helper method that responds to DT's \"data:remove\" event (invoked by .removeRow), by adding",
                "     * the new record (in o.newVal) to the internal buffer and refreshing the Paginator UI.",
                "     *",
                "     * NOTE: This only applies to FOR LOCAL DATA ONLY, for client-side pagination",
                "     *",
                "     * Implementers are welcome to override this method with their own !!",
                "     *",
                "     * @method removeLocalData",
                "     * @param {Object} o Event object from the ModelList.remove event",
                "     * @param {Number} pgIndex Calculated absolute index of the record within the entire dataset",
                "     * @public",
                "     */",
                "    removeLocalData: function(o, pgIndex) {",
                "        var data  = (o && o.model && o.model.toJSON) ? o.model.toJSON() : null,",
                "            mdata = [];",
                "",
                "        if(data && pgIndex !== null ) {",
                "            mdata = this._mlistArray;",
                "            mdata.splice(pgIndex,1);",
                "            this.resetLocalData(mdata);",
                "        }",
                "",
                "    },",
                "",
                "    /**",
                "     * Overridable method that fires for server-side pagination when a data item is added",
                "     * via either \"data:add\" or .addRow.",
                "     *",
                "     * It is up to implementers to either override this method or provide a mechanism",
                "     * (why not than ModelSync.REST!) to respond to the provided event.",
                "     *",
                "     * @method addRemoteData",
                "     * @param {Object} o Change event payload object from ModelList's .add method",
                "     * @param {Number} pgIndex Calculated absolute index of the record within the entire dataset",
                "     */",
                "    addRemoteData: function(o,pgIndex) {",
                "        this.fire('addRemoteRecord',{",
                "            oPayload: o,",
                "            pagIndex: pgIndex",
                "        });",
                "    },",
                "",
                "    /**",
                "     * Overridable method that fires for server-side pagination when a data item is deleted",
                "     * via either \"data:remove\" or .removeRow.",
                "     *",
                "     * It is up to implementers to either override this method or provide a mechanism",
                "     * (why not than ModelSync.REST!) to respond to the provided event.",
                "     *",
                "     * @method removeRemoteData",
                "     * @param {Object} o Change event payload object from ModelList's .remove method",
                "     * @param {Number} pgIndex Calculated absolute index of the record within the entire dataset",
                "     */",
                "    removeRemoteData: function(o,pgIndex) {",
                "        this.fire('removeRemoteRecord',{",
                "            oPayload: o,",
                "            pagIndex: pgIndex",
                "        });",
                "    },",
                "",
                "",
                "    /*----------------------------------------------------------------------------------------------------------*/",
                "    /*                  P R I V A T E    M E T H O D S                                                          */",
                "    /*----------------------------------------------------------------------------------------------------------*/",
                "",
                "    /**",
                "     * Method called to ensure that the _afterDataReset method is called, specifically for the case",
                "     * where a DataSource is used (which is hard to track when it is plugged in ...)",
                "     *",
                "     * @method _afterSyncUI",
                "     * @private",
                "     */",
                "    _afterSyncUI: function(){",
                "        if ( !this._pagDataSrc ) {",
                "            this._afterDataReset({});",
                "        }",
                "    },",
                "",
                "",
                "    /**",
                "     * A primary method for initially determining the origin of the \"data\" for paginating.",
                "     * DataTable calls \"this.data.reset()\" many times, most importantly at the very beginning",
                "     * before and before any remote responses have been received.",
                "     *",
                "     * We use this fact to set an initial \"type\" of data origin (either 'mlist', 'ds' or 'local')",
                "     * to represent a ModelSync.REST origin, DataSource or just locally assigned data (default).",
                "     *",
                "     * Then after the initial typing, listeners are set for the appropriate remote source of",
                "     * data, or for local data the assigned \"data\" attribute is used as the initial data.",
                "     *",
                "     * After this method is first completed,",
                "     *",
                "     * @method _afterDataReset",
                "     * @param {Object} o Event object from the Model.reset event",
                "     * @private",
                "     */",
                "    _afterDataReset: function(o){",
                "        if(this._pagDataSrc !== null) {",
                "            return;",
                "        }",
                "",
                "        var localPagDataSrc = '';",
                "",
                "    // ----",
                "    //  Step 1. Determine if a ModelSync REST is setup, or a DataSource,",
                "    //          or if all fail then fallback to local data",
                "    // ----",
                "",
                "        // For no DS and a ModelSync.REST with \"url\" static property ===>> ModelList",
                "        if ( !this.datasource && this.data.url && this._pagDataSrc === null ) {",
                "",
                "            localPagDataSrc = 'mlist';",
                "",
                "        } else if ( this.datasource && !this.data.url && this._pagDataSrc === null ) {",
                "",
                "        // or With a DS defined and no \"url\" static property of the Data  ===>> DataSource",
                "            localPagDataSrc = 'ds';",
                "",
                "        } else {",
                "",
                "        // ... or finally, assume \"local\" data",
                "            localPagDataSrc = 'local';",
                "",
                "        }",
                "",
                "    // ----",
                "    //  Step 2. Define listeners for the specific data provider, either ModelSync.REST",
                "    //          or DataSource or for \"local\" data (set via \"data\" ATTR)",
                "    //",
                "    //   Note: Handle \"special case\" where the <b>initial payload</b> is sent from a remote",
                "    //         source, but once received the user wants \"client\" pagination.",
                "    // ----",
                "",
                "        switch( localPagDataSrc ) {",
                "",
                "            case 'mlist':",
                "                // Set listener for ModelSync.REST custom event \"response\" ... after .parse is processed",
                "                this._evtHandlesPag.push( this.data.after( \"response\", this._afterMLResponse, this) );",
                "               // this.data.after( \"response\", this._afterMLResponse, this)",
                "",
                "                if( /client/i.test(this.get('paginationSource')) ){",
                "                    this._pagDataSrc = 'local';",
                "                } else {",
                "                    this._pagDataSrc = 'mlist';",
                "                }",
                "",
                "                break;",
                "",
                "            case 'ds':",
                "                this._evtHandlesPag.push( this.datasource.get('datasource').after(\"response\", Y.bind(this._afterDSResponse,this) ) );",
                "                //this.datasource.get('datasource').after(\"response\", Y.bind(this._afterDSResponse,this) )",
                "",
                "                if( /client/i.test(this.get('paginationSource')) ) {",
                "                    this._pagDataSrc = 'local';",
                "                } else {",
                "                    this._pagDataSrc = 'ds';",
                "                }",
                "",
                "                break;",
                "",
                "            case 'local':",
                "                this._setLocalData(o);",
                "                break;",
                "",
                "        }",
                "",
                "    },",
                "",
                "    /**",
                "     * Method that stores the \"local\" data in an internal buffer within the _mlistArray static",
                "     * property.  The _mlistArray is stored as a simple JS Array type (for speed), and is used to",
                "     * select current \"pages\" by Array slicing methods.",
                "     *",
                "     * If the argument \"o\" is provided, it will be used as the new dataset for local data, if it",
                "     * is not set, then the current DT \"data\" attribute is used.",
                "     *",
                "     * On a \"sort\" event, the buffer needs to be sorted first, then sliced for paging.",
                "     *",
                "     * @method _setLocalData",
                "     * @param {Array|ModelList} o Optional data to set as full local dataset",
                "     * @private",
                "     */",
                "    _setLocalData: function(o){",
                "        // Get the DT's \"data\" attribute as the full local dataset",
                "        var mdata = this.get('data');",
                "",
                "        // Use the passed in argument only if it exists and is Array or ML, otherwise",
                "        //   just use the current \"data\" setting",
                "        if(o && (Y.Lang.isArray(o) || o instanceof Y.ModelList) ) {",
                "            mdata = o;",
                "        }",
                "",
                "        this._pagDataSrc = 'local';     // reset this, in case it wasn't already",
                "        //",
                "        //   Store the full local data in property _mlistArray (as an array)",
                "        //",
                "        this.resetLocalData(mdata);",
                "",
                "        this._set('paginationState',this._defPagState());",
                "    },",
                "",
                "",
                "    /**",
                "     * Listener method that is called after the DataTable's data \"add\" event fires",
                "     * @method _afterDataAdd",
                "     * @param {Object} o Event payload from ModelList's \"add\" event",
                "     * @private",
                "     */",
                "    _afterDataAdd: function(o){",
                "        var pgIndexStart = this.pagModel.get('itemIndexStart'),",
                "            index        = o.index || null,",
                "            pgIndex      = (index!==null) ? pgIndexStart + index : null;",
                "",
                "        if(this._pagDataSrc === 'local') {",
                "            this.addLocalData(o,pgIndex);",
                "        } else {",
                "            this.addRemoteData(o,pgIndex);",
                "        }",
                "",
                "        this.fire('afterDataAdd',{",
                "            oPayload:   o,",
                "            pagIndex:   pgIndex",
                "        });",
                "    },",
                "",
                "    /**",
                "     * Event fired when the DataTable's \"data:add\" event is fired, that includes",
                "     * ModelList.add's event payload.",
                "     *",
                "     * This event could be used by implementers to handle refreshing of the local data.",
                "     * (not presently implemented)",
                "",
                "     * @event afterDataAdd",
                "     * @param {Object} obj",
                "     *  @param {Object} oPayload Event payload from ModelList.add",
                "     *  @param {Number} pagIndex Calculated absolute index of the record within the entire dataset",
                "     */",
                "",
                "    /**",
                "     * Over-ridable method to call after the DataTable's data \"remove\" event fires",
                "     * @method _afterDataRemove",
                "     * @param {Object} o Event payload from ModelList.remove",
                "     * @private",
                "     */",
                "    _afterDataRemove: function(o){",
                "        var pgIndexStart = this.pagModel.get('itemIndexStart'),",
                "            index        = o.index || null,",
                "            pgIndex      = (index !== null) ? pgIndexStart + index : null;",
                "",
                "        if(this._pagDataSrc === 'local'){",
                "            this.removeLocalData(o,pgIndex);",
                "        } else {",
                "            this.removeRemoteData(o,pgIndex);",
                "        }",
                "",
                "        this.fire('afterDataRemove',{",
                "            oPayload:   o,",
                "            pagIndex:   pgIndex",
                "        });",
                "    },",
                "",
                "    /**",
                "     * Event fired when the DataTable's \"data:remove\" event is fired, that includes",
                "     * the ModelList.remove's event payload.",
                "     *",
                "     * This event could be used by implementers to handle refreshing of the local data.",
                "     * (not presently implemented)",
                "     *",
                "     * @event afterDataRemove",
                "     * @param {Object} obj",
                "     *  @param {Object} oPayload Event payload from ModelList.remove",
                "     *  @param {Number} pagIndex Calculated absolute index of the record within the entire dataset",
                "     */",
                "",
                "    /**",
                "     * Listener that fires after the DT \"sort\" event processes.  The Paginator must be",
                "     * reset to the currently selected new \"page\", based on the sorting criteria.",
                "     *",
                "     * For remote sources this is easy, just send another remote page request.",
                "     *",
                "     * For local data source it is more complex, as we have to deal with sorting the full",
                "     * local data array ...",
                "     *",
                "     * @method _afterSortPaginator",
                "     * @private",
                "     */",
                "    _afterSortPaginator: function() {",
                "        if(!this._pagDataSrc) {",
                "            return;",
                "        }",
                "",
                "        switch(this._pagDataSrc) {",
                "",
                "            case 'mlist':",
                "            case 'ds':",
                "                this.processPageRequest(this.pagModel.get('page'));",
                "                break;",
                "",
                "            case 'local':",
                "                this.paginatorSortLocalData();",
                "",
                "        }",
                "",
                "    },",
                "",
                "    /**",
                "     * Method fires after the \"response\" event from DataSource OR after the custom ModelList fires",
                "     * a REQUIRED user-defined \"response\" event.  (typically a custom ModelList's .parse() method",
                "     * is over-ridden to provide the custom \"response\" event including {results:, meta:} properties.",
                "     *",
                "     * Usage Note: The user is REQUIRED to provide a custom \"response\" event in the ModelList",
                "     *  parse function in order for this to work properly.",
                "     *",
                "     * @method _afterRemoteResponse",
                "     * @param {Object} o Includes results and meta properties passed in via \"response\" custom event;",
                "     *  @param {Array} o.results Array of result Objects",
                "     *  @param {Object} o.meta Object including properties mapped to include pagination properties",
                "     * @param {String} rsource Source of response, either 'ds' or 'mlist'",
                "     * @private",
                "     */",
                "    _afterRemoteResponse: function(o,rsource){",
                "        var resp          = ( rsource === 'ds') ? o.response : o,",
                "            totalItemProp = this.get('serverPaginationMap').totalItems || null,",
                "            respItemTotal = (totalItemProp && resp.meta && resp.meta[totalItemProp] !== undefined) ? resp.meta[totalItemProp]: null;",
                "",
                "        // Process through the \"response\", checking the \"totalItems\" returned",
                "        //   ... if no \"totalItems\" was included in the response, then set the response to \"local\" data",
                "        if ( resp.results ) {",
                "            if ( totalItemProp && respItemTotal !== null ) {",
                "",
                "                // The response included totalItems:0 ... special case of a null set",
                "                if( respItemTotal === 0) {",
                "",
                "                    this.pagModel.set('totalItems', 0 );",
                "                    this.pagModel.set('page',1);",
                "                    this.data.reset( null, {silent:true} );",
                "                    this.syncUI();",
                "                    this.paginator.render();",
                "",
                "                } else {",
                "",
                "                    this.pagModel.set('totalItems', respItemTotal);",
                "",
                "                }",
                "",
                "            } else {",
                "",
                "                this._setLocalData(resp.results);",
                "            }",
                "        }",
                "        this.resizePaginator();",
                "    },",
                "",
                "    /**",
                "     * Method fires after DataTable/DataSource plugin fires it's \"response\" event, which includes",
                "     * the response object, including {results:, meta:} properties.",
                "     *",
                "     * @method _afterDSResponse",
                "     * @param {Object} e Event object from DataSource's \"response\" event",
                "     * @private",
                "     */",
                "    _afterDSResponse: function(e) {",
                "        this._afterRemoteResponse(e,'ds');",
                "    },",
                "",
                "    /**",
                "     * Method fires after custom ModelSync.REST \"load\" action fires a user-defined \"response\" event.",
                "     * This can be implemented by extending ModelSync.REST by adding .parse() method which fires",
                "     * a custom \"response\" event including {results:, meta:} properties.",
                "     *",
                "     * Usage Note: The user is REQUIRED to provide a custom \"response\" event in the ModelList",
                "     *  parse overridden function in order for this to work properly.",
                "     *",
                "     * @method _afterMLResponse",
                "     * @param {Object} resp Includes results and meta properties",
                "     *  @param {String} resp.resp Original raw response argument received into ModelList \"parse\" method",
                "     *  @param {Object} resp.parsed Parsed raw response object after conversion (typically via JSON)",
                "     *  @param {Array} resp.results Array of result Objects",
                "     *  @param {Object} resp.meta Object including properties mapped to include pagination properties",
                "     * @private",
                "     */",
                "    _afterMLResponse: function(resp){",
                "        this._afterRemoteResponse(resp,'mlist');",
                "    },",
                "",
                "    /**",
                "     * Listener that fires when the Model's 'pageChange' fires, this extracts the current page from the state",
                "     * object and then makes the appropriate processPageRequest call.",
                "     *",
                "     * @method _pageChangeListener",
                "     * @param {Object} o Change event facade for the PaginatorModel 'pageChange' event",
                "     * @private",
                "     */",
                "    _pageChangeListener: function(o){",
                "        var newPage = +o.newVal || 1;",
                "        newPage = this.pagModel.get('page');",
                "        this.processPageRequest(newPage, this.get('paginationState'));",
                "    },",
                "",
                "    /**",
                "     * A listener that monitors the \"totalItems\" attribute of the Paginator Model and",
                "     * if a zero list of items is returns it fires the \"paginatorZeroItems\" custom event.",
                "     * @method _totalItemsListener",
                "     * @param {Object} Change event facade from the PaginatorModel 'totalItemsChange' event",
                "     * @private",
                "     */",
                "    _totalItemsListener: function(o) {",
                "        if(o.newVal===0) {",
                "            this.fire('paginatorZeroItems');",
                "        }",
                "    },",
                "",
                "    /**",
                "     * Event fired when the \"totalItems\" setting of the Paginator Model is set to zero,",
                "     * due to a null response froma remote request or a null Array or ModelList being set.",
                "     * @event paginatorZeroItems",
                "     */",
                "",
                "    /**",
                "     * Method to adjust the CSS width of the paginator container and set it to the",
                "     *  width of the underlying DT.",
                "     *",
                "     * Reworked this to reset width to \"yui3-datatable-columns\", i.e. the THEAD element for",
                "     *  both scrollable and non-scrollable to get around a 2px mismatch.",
                "     *",
                "     * @method _syncPaginatorSize",
                "     * @return Boolean if success",
                "     * @private",
                "     */",
                "    _syncPaginatorSize: function() {",
                "        var tblCols = this.get('boundingBox').one('.'+this.getClassName('columns'));",
                "        if ( !tblCols ) {",
                "            return false;",
                "        }",
                "",
                "        this.paginator.get('container').setStyle('width',tblCols.getComputedStyle('width'));",
                "        this.fire('paginatorResize');",
                "        return true;",
                "    },",
                "",
                "    /**",
                "     * Event fired after the _syncPaginatorSize method is called  (requires ATTR paginatorResize)",
                "     * to be set true",
                "     * @event paginatorResize",
                "     */",
                "",
                "",
                "    /**",
                "     * Helper method that searches the 'serverPaginationMap' ATTR and returns the requested",
                "     * property, including if it is nested as \"toServer\" or \"fromServer\" subattribute.",
                "     * ( Used in processPageRequest )",
                "     *",
                "     * @example",
                "     *    _srvPagMapObj(\"itemsPerPage\")",
                "     *         { itemsPerPage : 'numPageRecords' }",
                "     *         { itemsPerPage : {toServer:'pageRows', fromServer:'pageRecordCount' }",
                "     *",
                "     * @method _srvPagMapObj",
                "     * @param {String} prop Property name to search for (expected matches in PaginatorModel ATTRS)",
                "     * @param {String} dir Directional (optional), either \"to\" (matches toServer) or \"from\" (matches fromServer)",
                "     * @return {String} rprop Attribute name from RHS of map",
                "     * @private",
                "     */",
                "    _srvPagMapObj: function(prop,dir){",
                "        var spm   = this.get('serverPaginationMap') || {},",
                "            rprop = spm[prop];",
                "",
                "        dir   = dir || 'to';",
                "",
                "        if ( rprop && dir === 'to' && rprop.toServer )   {",
                "            rprop = rprop.toServer;",
                "        }",
                "",
                "        if ( rprop && dir !== 'to' && rprop.fromServer ) {",
                "            rprop = rprop.fromServer;",
                "        }",
                "",
                "        return rprop;",
                "    },",
                "",
                "    /**",
                "     * Default 'valueFn' function setting for the ATTR `serverPaginationMap`, where",
                "     * the defaults are simply the member names.",
                "     * @method _defPagMap",
                "     * @return {Object} obj",
                "     * @private",
                "     */",
                "    _defPagMap: function() {",
                "        return    {",
                "            page:           'page',",
                "            totalItems:     'totalItems',",
                "            itemsPerPage:   'itemsPerPage',",
                "            itemIndexStart: 'itemIndexStart',",
                "            itemIndexEnd:   'itemIndexEnd'",
                "        };",
                "    },",
                "",
                "    /**",
                "     * Setter method for the `serverPaginationMap` attribute, which can be used to",
                "     *  merge the \"default\" object with the user-supplied object.",
                "     * @method _setPagMap",
                "     * @param {Object} val Object hash to serve as the attribute setting",
                "     * @return {Object}",
                "     * @private",
                "     */",
                "    _setPagMap: function(val) {",
                "        var defObj = this._defPagMap();",
                "        return Y.merge(defObj,val);",
                "    },",
                "",
                "",
                "    /**",
                "     * Sets default for the \"paginationState\" DataTable attribute complex object as an",
                "     * object with all of PaginatorModel ATTRS and the `sortBy` setting.",
                "     * @method _defPagState",
                "     * @return {Object}",
                "     * @private",
                "     */",
                "    _defPagState: function(){",
                "        var rtn = {};",
                "        if ( this.get('paginator') && this.get('paginator').model ) {",
                "            rtn = this.get('paginator').model.getAttrs(['page','totalItems','itemsPerPage','itemIndexStart','itemIndexEnd','totalPages']);",
                "            //rtn = this.get('paginator').model.getAttrs();",
                "            rtn.sortBy = this.get('sortBy');",
                "        }",
                "        return rtn;",
                "    },",
                "",
                "    /**",
                "     * Getter for the \"paginationState\" DataTable attribute complex object.",
                "     * @method _gefPagState",
                "     * @return {Object}",
                "     * @private",
                "     */",
                "    _getPagState: function(){",
                "        if(!this.get('paginator')) {",
                "            return null;",
                "        }",
                "        var rtn = (this.pagModel) ? this.pagModel.getAttrs(['page','totalItems','itemsPerPage','itemIndexStart','itemIndexEnd','totalPages']) : {};",
                "    //        var rtn = (this.pagModel) ? this.pagModel.getAttrs(true) : {};",
                "        rtn.sortBy = this.get('sortBy');",
                "        return rtn;",
                "    },",
                "",
                "    /**",
                "     * Sets default for the \"paginationState\" DataTable attribute complex object.",
                "     * @method _sefPagState",
                "     * @param {Object} val Pagination state complex object settings",
                "     * @return {Object}",
                "     * @private",
                "     */",
                "    _setPagState: function(val) {",
                "        if(!this.get('paginator')) {",
                "            return null;",
                "        }",
                "",
                "        if ( val.initialized !== undefined ){",
                "            delete val.initialized;",
                "        }",
                "",
                "        if ( val.sortBy !== undefined ){",
                "            this.set('sortBy',val.sortBy);",
                "        }",
                "",
                "        if ( this.pagModel ) {",
                "            this.pagModel.setAttrs(val);",
                "        }",
                "        return val;",
                "    },",
                "",
                "",
                "    /**",
                "     * This is a setter for the 'paginator' attribute, primarily to set the public property `paginator` to the",
                "     * attribute value.",
                "     *",
                "     * @method _setPaginator",
                "     * @param {PaginatorView|View} val The PaginatorView instance to set",
                "     * @return {*}",
                "     * @private",
                "     */",
                "    _setPaginator : function(val){",
                "        if ( !val ) {",
                "            return;",
                "        }",
                "        this.paginator = val;",
                "        this.initializer();",
                "        return val;",
                "    },",
                "",
                "",
                "",
                "    /**",
                "     * A method that fires after the DataTable `renderView` method completes, that is *approximately* when",
                "     * the DataTable has finished rendering.",
                "     *",
                "     * @method _notifyRender",
                "     * @private",
                "     */",
                "    _notifyRender: function() {",
                "        if ( this.get('paginatorResize') === true ) {",
                "            this.resizePaginator();",
                "        }",
                "        this.fire('render');",
                "    }",
                "",
                "    /**",
                "     * Fires after the DataTable 'renderView' event fires",
                "     * @event render",
                "     */",
                "",
                "});",
                "",
                "Y.DataTable.Paginator = DtPaginator;",
                "Y.Base.mix(Y.DataTable, [Y.DataTable.Paginator]);",
                "",
                "",
                "}, '@VERSION@', {\"requires\": [\"datatable-base\", \"base-build\", \"datatype\", \"json\"]});",
                "",
                "}());"
            ],
            "l": {
                "1": 1,
                "89": 1,
                "92": 1,
                "212": 1,
                "297": 15,
                "299": 11,
                "300": 11,
                "303": 11,
                "304": 11,
                "305": 11,
                "306": 11,
                "307": 11,
                "311": 11,
                "312": 11,
                "313": 11,
                "316": 11,
                "319": 11,
                "322": 11,
                "327": 15,
                "340": 15,
                "341": 99,
                "342": 0,
                "345": 99,
                "346": 0,
                "347": 0,
                "350": 99,
                "356": 15,
                "357": 15,
                "360": 15,
                "361": 15,
                "383": 16,
                "392": 16,
                "393": 3,
                "394": 3,
                "397": 13,
                "398": 13,
                "399": 13,
                "407": 16,
                "410": 16,
                "411": 16,
                "413": 16,
                "414": 16,
                "415": 16,
                "416": 16,
                "417": 16,
                "420": 16,
                "429": 16,
                "436": 0,
                "437": 0,
                "439": 0,
                "446": 0,
                "448": 0,
                "453": 16,
                "458": 16,
                "459": 16,
                "478": 13,
                "493": 0,
                "506": 0,
                "522": 16,
                "527": 16,
                "528": 16,
                "529": 16,
                "544": 25,
                "545": 10,
                "549": 15,
                "562": 13,
                "563": 11,
                "564": 11,
                "565": 1100,
                "567": 2,
                "568": 2,
                "570": 13,
                "571": 13,
                "572": 13,
                "588": 0,
                "592": 0,
                "594": 0,
                "596": 0,
                "604": 0,
                "605": 0,
                "606": 0,
                "608": 0,
                "610": 0,
                "612": 0,
                "614": 0,
                "617": 0,
                "619": 0,
                "622": 0,
                "626": 0,
                "630": 0,
                "644": 0,
                "661": 0,
                "664": 0,
                "665": 0,
                "666": 0,
                "669": 0,
                "670": 0,
                "672": 0,
                "673": 0,
                "675": 0,
                "676": 0,
                "677": 0,
                "680": 0,
                "699": 0,
                "702": 0,
                "703": 0,
                "704": 0,
                "705": 0,
                "722": 0,
                "740": 0,
                "759": 11,
                "760": 11,
                "783": 12,
                "784": 1,
                "787": 11,
                "795": 11,
                "797": 0,
                "799": 11,
                "802": 0,
                "807": 11,
                "819": 11,
                "823": 0,
                "826": 0,
                "827": 0,
                "829": 0,
                "832": 0,
                "835": 0,
                "838": 0,
                "839": 0,
                "841": 0,
                "844": 0,
                "847": 11,
                "848": 11,
                "870": 11,
                "874": 11,
                "875": 0,
                "878": 11,
                "882": 11,
                "884": 11,
                "895": 0,
                "899": 0,
                "900": 0,
                "902": 0,
                "905": 0,
                "931": 0,
                "935": 0,
                "936": 0,
                "938": 0,
                "941": 0,
                "973": 0,
                "974": 0,
                "977": 0,
                "981": 0,
                "982": 0,
                "985": 0,
                "1007": 0,
                "1013": 0,
                "1014": 0,
                "1017": 0,
                "1019": 0,
                "1020": 0,
                "1021": 0,
                "1022": 0,
                "1023": 0,
                "1027": 0,
                "1033": 0,
                "1036": 0,
                "1048": 0,
                "1068": 0,
                "1080": 3,
                "1081": 3,
                "1082": 3,
                "1093": 12,
                "1094": 1,
                "1116": 15,
                "1117": 15,
                "1118": 15,
                "1121": 0,
                "1122": 0,
                "1123": 0,
                "1150": 64,
                "1153": 64,
                "1155": 64,
                "1156": 0,
                "1159": 64,
                "1160": 0,
                "1163": 64,
                "1174": 30,
                "1192": 15,
                "1193": 15,
                "1205": 11,
                "1206": 11,
                "1207": 11,
                "1209": 11,
                "1211": 11,
                "1221": 48,
                "1222": 5,
                "1224": 43,
                "1226": 43,
                "1227": 43,
                "1238": 11,
                "1239": 0,
                "1242": 11,
                "1243": 0,
                "1246": 11,
                "1247": 0,
                "1250": 11,
                "1251": 11,
                "1253": 11,
                "1267": 15,
                "1268": 4,
                "1270": 11,
                "1271": 11,
                "1272": 11,
                "1285": 27,
                "1286": 9,
                "1288": 27,
                "1298": 1,
                "1299": 1
            }
        }
    },
    "coverageType": "istanbul"
}
